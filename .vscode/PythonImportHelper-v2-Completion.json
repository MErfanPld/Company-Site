[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularRedocView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "home.models",
        "description": "home.models",
        "isExtraImport": true,
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "home.models",
        "description": "home.models",
        "isExtraImport": true,
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "News",
        "importPath": "news.models",
        "description": "news.models",
        "isExtraImport": true,
        "detail": "news.models",
        "documentation": {}
    },
    {
        "label": "News",
        "importPath": "news.models",
        "description": "news.models",
        "isExtraImport": true,
        "detail": "news.models",
        "documentation": {}
    },
    {
        "label": "home.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "home.utils",
        "description": "home.utils",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "news.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "news.utils",
        "description": "news.utils",
        "detail": "news.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_news",
        "importPath": "news.utils",
        "description": "news.utils",
        "isExtraImport": true,
        "detail": "news.utils",
        "documentation": {}
    },
    {
        "label": "regulation.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "regulation.utils",
        "description": "regulation.utils",
        "detail": "regulation.utils",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.asgi",
        "description": "config.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "config.asgi",
        "documentation": {}
    },
    {
        "label": "APICorsMiddleware",
        "kind": 6,
        "importPath": "config.middleware",
        "description": "config.middleware",
        "peekOfCode": "class APICorsMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        response = self.get_response(request)\n        response[\"Access-Control-Allow-Origin\"] = \"*\"\n        response[\"Access-Control-Allow-Methods\"] = \"GET, POST, PUT, DELETE, OPTIONS\"\n        response[\"Access-Control-Allow-Headers\"] = \"Content-Type, Authorization\"\n        return response",
        "detail": "config.middleware",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-q)brqd3@-@$9ui07y8mbc+hav761=g=5rx@vu8u_j3--f85cpy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-q)brqd3@-@$9ui07y8mbc+hav761=g=5rx@vu8u_j3--f85cpy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'drf_spectacular',\n    # 'corsheaders',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    # 'corsheaders.middleware.CorsMiddleware',\n    'config.middleware.APICorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ROOT_URLCONF = 'config.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WSGI_APPLICATION = 'config.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nSPECTACULAR_SETTINGS = {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Project API',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Project API',\n    'DESCRIPTION': 'Project description',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Project API',\n    'DESCRIPTION': 'Project description',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Project API',\n    'DESCRIPTION': 'Project description',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n}\n# CORS_ALLOWED_ORIGINS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'Project API',\n    'DESCRIPTION': 'Project description',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n}\n# CORS_ALLOWED_ORIGINS = [\n#     'http://localhost:3030',\n# ]",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "urlpatterns = [\n    path('schema/', SpectacularAPIView.as_view(), name='schema'),\n    path('schema/swagger-ui/',\n         SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),\n    path('schema/redoc/',\n         SpectacularRedocView.as_view(url_name='schema'), name='redoc'),\n    path('admin/', admin.site.urls),\n    path('', include('home.urls')),\n    path('', include('regulation.urls')),\n    path('', include('contact.urls')),",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.wsgi",
        "description": "config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "config.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact.migrations.0001_initial",
        "description": "contact.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContactUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('fullname', models.CharField(max_length=255, verbose_name='Full Name')),",
        "detail": "contact.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact.migrations.0002_alter_contactus_status",
        "description": "contact.migrations.0002_alter_contactus_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contact', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='contactus',\n            name='status',\n            field=models.BooleanField(default=False, verbose_name='Is Read?'),\n        ),",
        "detail": "contact.migrations.0002_alter_contactus_status",
        "documentation": {}
    },
    {
        "label": "ContactUsAdmin",
        "kind": 6,
        "importPath": "contact.admin",
        "description": "contact.admin",
        "peekOfCode": "class ContactUsAdmin(admin.ModelAdmin):\n    list_display = ('fullname', 'email', 'phone','status')\n    list_filter = ('status',)\n    search_fields = ('fullname', 'email', 'phone')\nadmin.site.register(ContactUs, ContactUsAdmin)",
        "detail": "contact.admin",
        "documentation": {}
    },
    {
        "label": "ContactConfig",
        "kind": 6,
        "importPath": "contact.apps",
        "description": "contact.apps",
        "peekOfCode": "class ContactConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contact'",
        "detail": "contact.apps",
        "documentation": {}
    },
    {
        "label": "ContactUs",
        "kind": 6,
        "importPath": "contact.models",
        "description": "contact.models",
        "peekOfCode": "class ContactUs(models.Model):\n    fullname = models.CharField(max_length=255, verbose_name=\"Full Name\")\n    email = models.EmailField(verbose_name=\"Email\")\n    phone = models.CharField(max_length=11, verbose_name=\"Phone\")\n    content = models.TextField(verbose_name=\"Content\")\n    status = models.BooleanField(default=False, verbose_name=\"Is Read?\")\n    created_at = models.DateTimeField(\n        auto_now_add=True,\n        verbose_name=\"Date Submit\"\n    )",
        "detail": "contact.models",
        "documentation": {}
    },
    {
        "label": "ContactUsSerializer",
        "kind": 6,
        "importPath": "contact.serializers",
        "description": "contact.serializers",
        "peekOfCode": "class ContactUsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ContactUs\n        fields = ['fullname', 'email','phone', 'content']",
        "detail": "contact.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "contact.urls",
        "description": "contact.urls",
        "peekOfCode": "app_name = \"contacts\"\nrouter = DefaultRouter()\nrouter.register(r'contacts', ContactUsViewSet)\nurlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "contact.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "contact.urls",
        "description": "contact.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'contacts', ContactUsViewSet)\nurlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "contact.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "contact.urls",
        "description": "contact.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "contact.urls",
        "documentation": {}
    },
    {
        "label": "ContactUsViewSet",
        "kind": 6,
        "importPath": "contact.views",
        "description": "contact.views",
        "peekOfCode": "class ContactUsViewSet(viewsets.ModelViewSet):\n    queryset = ContactUs.objects.all()\n    serializer_class = ContactUsSerializer",
        "detail": "contact.views",
        "documentation": {}
    },
    {
        "label": "DashboardConfig",
        "kind": 6,
        "importPath": "dashboard.apps",
        "description": "dashboard.apps",
        "peekOfCode": "class DashboardConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'dashboard'",
        "detail": "dashboard.apps",
        "documentation": {}
    },
    {
        "label": "SliderSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class SliderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Sliders\n        fields = \"__all__\"\nclass AboutUsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUs\n        fields = \"__all__\"\nclass ChooseUsSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AboutUsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUs\n        fields = \"__all__\"\nclass ChooseUsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUs\n        fields = \"__all__\"\nclass ServiceSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ChooseUsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUs\n        fields = \"__all__\"\nclass ServiceSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Service\n        fields = \"__all__\"\nclass CommentsSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ServiceSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Service\n        fields = \"__all__\"\nclass CommentsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comments\n        fields = \"__all__\"\nclass SuggestionsSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class CommentsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comments\n        fields = \"__all__\"\nclass SuggestionsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestions\n        fields = \"__all__\"\nclass FAQSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class SuggestionsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestions\n        fields = \"__all__\"\nclass FAQSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQ\n        fields = \"__all__\"\nclass NewsSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "FAQSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class FAQSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQ\n        fields = \"__all__\"\nclass NewsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = News\n        fields = \"__all__\"",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "NewsSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class NewsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = News\n        fields = \"__all__\"",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "dashboard.urls",
        "description": "dashboard.urls",
        "peekOfCode": "app_name = \"dashboard\"\nurlpatterns = [\n    # =============== Slider ===============\n    path(\"sliders/\", views.SliderListView.as_view(),\n         name=\"slider_dashboard_list\"),\n    path(\"sliders/create/\", views.SliderCreateView.as_view(),\n         name=\"slider_dashboard_create\"),\n    path(\"sliders/<int:id>/\", views.SliderDetailView.as_view(),\n         name=\"slider_dashboard_detail\"),\n    path(\"sliders/<int:id>/update/\", views.SliderUpdateView.as_view(),",
        "detail": "dashboard.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "dashboard.urls",
        "description": "dashboard.urls",
        "peekOfCode": "urlpatterns = [\n    # =============== Slider ===============\n    path(\"sliders/\", views.SliderListView.as_view(),\n         name=\"slider_dashboard_list\"),\n    path(\"sliders/create/\", views.SliderCreateView.as_view(),\n         name=\"slider_dashboard_create\"),\n    path(\"sliders/<int:id>/\", views.SliderDetailView.as_view(),\n         name=\"slider_dashboard_detail\"),\n    path(\"sliders/<int:id>/update/\", views.SliderUpdateView.as_view(),\n         name=\"slider_dashboard_update\"),",
        "detail": "dashboard.urls",
        "documentation": {}
    },
    {
        "label": "SliderListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SliderListView(ListAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\nclass SliderCreateView(CreateAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\nclass SliderDetailView(RetrieveAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SliderCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SliderCreateView(CreateAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\nclass SliderDetailView(RetrieveAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'\nclass SliderUpdateView(UpdateAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SliderDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SliderDetailView(RetrieveAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'\nclass SliderUpdateView(UpdateAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'\nclass SliderDeleteView(DestroyAPIView):\n    queryset = Sliders.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SliderUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SliderUpdateView(UpdateAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'\nclass SliderDeleteView(DestroyAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'\n# * =================== AboutUs Dashboard ===================\nclass AboutUsListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SliderDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SliderDeleteView(DestroyAPIView):\n    queryset = Sliders.objects.all()\n    serializer_class = SliderSerializer\n    lookup_field = 'id'\n# * =================== AboutUs Dashboard ===================\nclass AboutUsListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\nclass AboutUsCreateView(CreateAPIView):\n    queryset = AboutUs.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\nclass AboutUsCreateView(CreateAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\nclass AboutUsDetailView(RetrieveAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsCreateView(CreateAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\nclass AboutUsDetailView(RetrieveAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'\nclass AboutUsUpdateView(UpdateAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsDetailView(RetrieveAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'\nclass AboutUsUpdateView(UpdateAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'\nclass AboutUsDeleteView(DestroyAPIView):\n    queryset = AboutUs.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsUpdateView(UpdateAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'\nclass AboutUsDeleteView(DestroyAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'\n# * =================== ChooseUs Dashboard ===================\nclass ChooseUsListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsDeleteView(DestroyAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsSerializer\n    lookup_field = 'id'\n# * =================== ChooseUs Dashboard ===================\nclass ChooseUsListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\nclass ChooseUsCreateView(CreateAPIView):\n    queryset = ChooseUs.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\nclass ChooseUsCreateView(CreateAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\nclass ChooseUsDetailView(RetrieveAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsCreateView(CreateAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\nclass ChooseUsDetailView(RetrieveAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'\nclass ChooseUsUpdateView(UpdateAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsDetailView(RetrieveAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'\nclass ChooseUsUpdateView(UpdateAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'\nclass ChooseUsDeleteView(DestroyAPIView):\n    queryset = ChooseUs.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsUpdateView(UpdateAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'\nclass ChooseUsDeleteView(DestroyAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'\n# * =================== Service Dashboard ===================\nclass ServiceListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsDeleteView(DestroyAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsSerializer\n    lookup_field = 'id'\n# * =================== Service Dashboard ===================\nclass ServiceListView(ListAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\nclass ServiceCreateView(CreateAPIView):\n    queryset = Service.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceListView(ListAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\nclass ServiceCreateView(CreateAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\nclass ServiceDetailView(RetrieveAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceCreateView(CreateAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\nclass ServiceDetailView(RetrieveAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'\nclass ServiceUpdateView(UpdateAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceDetailView(RetrieveAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'\nclass ServiceUpdateView(UpdateAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'\nclass ServiceDeleteView(DestroyAPIView):\n    queryset = Service.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceUpdateView(UpdateAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'\nclass ServiceDeleteView(DestroyAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'\n# * =================== Comments Dashboard ===================\nclass CommentsListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceDeleteView(DestroyAPIView):\n    queryset = Service.objects.all()\n    serializer_class = ServiceSerializer\n    lookup_field = 'id'\n# * =================== Comments Dashboard ===================\nclass CommentsListView(ListAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\nclass CommentsCreateView(CreateAPIView):\n    queryset = Comments.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsListView(ListAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\nclass CommentsCreateView(CreateAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\nclass CommentsDetailView(RetrieveAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsCreateView(CreateAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\nclass CommentsDetailView(RetrieveAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'\nclass CommentsUpdateView(UpdateAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsDetailView(RetrieveAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'\nclass CommentsUpdateView(UpdateAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'\nclass CommentsDeleteView(DestroyAPIView):\n    queryset = Comments.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsUpdateView(UpdateAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'\nclass CommentsDeleteView(DestroyAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'\n# * =================== Suggestions Dashboard ===================\nclass SuggestionsListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsDeleteView(DestroyAPIView):\n    queryset = Comments.objects.all()\n    serializer_class = CommentsSerializer\n    lookup_field = 'id'\n# * =================== Suggestions Dashboard ===================\nclass SuggestionsListView(ListAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\nclass SuggestionsCreateView(CreateAPIView):\n    queryset = Suggestions.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsListView(ListAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\nclass SuggestionsCreateView(CreateAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\nclass SuggestionsDetailView(RetrieveAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsCreateView(CreateAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\nclass SuggestionsDetailView(RetrieveAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'\nclass SuggestionsUpdateView(UpdateAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsDetailView(RetrieveAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'\nclass SuggestionsUpdateView(UpdateAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'\nclass SuggestionsDeleteView(DestroyAPIView):\n    queryset = Suggestions.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsUpdateView(UpdateAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'\nclass SuggestionsDeleteView(DestroyAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'\n# * =================== FAQ Dashboard ===================\nclass FAQListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsDeleteView(DestroyAPIView):\n    queryset = Suggestions.objects.all()\n    serializer_class = SuggestionsSerializer\n    lookup_field = 'id'\n# * =================== FAQ Dashboard ===================\nclass FAQListView(ListAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\nclass FAQCreateView(CreateAPIView):\n    queryset = FAQ.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQListView(ListAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\nclass FAQCreateView(CreateAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\nclass FAQDetailView(RetrieveAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQCreateView(CreateAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\nclass FAQDetailView(RetrieveAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'\nclass FAQUpdateView(UpdateAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQDetailView(RetrieveAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'\nclass FAQUpdateView(UpdateAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'\nclass FAQDeleteView(DestroyAPIView):\n    queryset = FAQ.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQUpdateView(UpdateAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'\nclass FAQDeleteView(DestroyAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'\n# * =================== News Dashboard ===================\nclass NewsListView(ListAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQDeleteView(DestroyAPIView):\n    queryset = FAQ.objects.all()\n    serializer_class = FAQSerializer\n    lookup_field = 'id'\n# * =================== News Dashboard ===================\nclass NewsListView(ListAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\nclass NewsCreateView(CreateAPIView):\n    queryset = News.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsListView(ListAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\nclass NewsCreateView(CreateAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\nclass NewsDetailView(RetrieveAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsCreateView(CreateAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\nclass NewsDetailView(RetrieveAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'\nclass NewsUpdateView(UpdateAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsDetailView(RetrieveAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'\nclass NewsUpdateView(UpdateAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'\nclass NewsDeleteView(DestroyAPIView):\n    queryset = News.objects.all()",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsUpdateView(UpdateAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'\nclass NewsDeleteView(DestroyAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsDeleteView(DestroyAPIView):\n    queryset = News.objects.all()\n    serializer_class = NewsSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0001_initial",
        "description": "home.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AboutUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255, verbose_name='Title EN')),",
        "detail": "home.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0002_alter_service_icon_img",
        "description": "home.migrations.0002_alter_service_icon_img",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='service',\n            name='icon_img',\n            field=models.ImageField(blank=True, null=True, upload_to=home.utils.upload_image_service_icon, verbose_name='Image Icon'),\n        ),",
        "detail": "home.migrations.0002_alter_service_icon_img",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0003_remove_comments_fullname_comments_fullname_ar_and_more",
        "description": "home.migrations.0003_remove_comments_fullname_comments_fullname_ar_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0002_alter_service_icon_img'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='comments',\n            name='fullname',\n        ),\n        migrations.AddField(",
        "detail": "home.migrations.0003_remove_comments_fullname_comments_fullname_ar_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0004_suggestions",
        "description": "home.migrations.0004_suggestions",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0003_remove_comments_fullname_comments_fullname_ar_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Suggestions',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255, verbose_name='Title EN')),",
        "detail": "home.migrations.0004_suggestions",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0005_faq_alter_comments_status_alter_service_status_and_more",
        "description": "home.migrations.0005_faq_alter_comments_status_alter_service_status_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0004_suggestions'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='FAQ',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('question_en', models.CharField(max_length=255, verbose_name='Question EN')),",
        "detail": "home.migrations.0005_faq_alter_comments_status_alter_service_status_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0006_alter_sliders_sub_title_ar_and_more",
        "description": "home.migrations.0006_alter_sliders_sub_title_ar_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0005_faq_alter_comments_status_alter_service_status_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='sliders',\n            name='sub_title_ar',\n            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Sub Title AR'),\n        ),",
        "detail": "home.migrations.0006_alter_sliders_sub_title_ar_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0007_comments_country_ar_comments_country_en",
        "description": "home.migrations.0007_comments_country_ar_comments_country_en",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0006_alter_sliders_sub_title_ar_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='comments',\n            name='country_ar',\n            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Country EN'),\n        ),",
        "detail": "home.migrations.0007_comments_country_ar_comments_country_en",
        "documentation": {}
    },
    {
        "label": "SlidersAdmin",
        "kind": 6,
        "importPath": "home.admin",
        "description": "home.admin",
        "peekOfCode": "class SlidersAdmin(admin.ModelAdmin):\n    list_display = ('title_en', 'title_ar', 'status', 'image')\n    list_filter = ('status',)\n    search_fields = ('title_en', 'title_ar')\n    ordering = ('title_en',)\n    fieldsets = (\n        (None, {\n            'fields': ('title_en', 'title_ar', 'sub_title_en', 'sub_title_ar', 'image', 'status')\n        }),\n    )",
        "detail": "home.admin",
        "documentation": {}
    },
    {
        "label": "AboutUsAdmin",
        "kind": 6,
        "importPath": "home.admin",
        "description": "home.admin",
        "peekOfCode": "class AboutUsAdmin(admin.ModelAdmin):\n    list_display = ('title_en', 'title_ar', 'count_employee',\n                    'count_product', 'image')\n    search_fields = ('title_en', 'title_ar', 'content_en', 'content_ar')\n    ordering = ('title_en',)\n    fieldsets = (\n        (None, {\n            'fields': ('title_en', 'title_ar', 'content_en', 'content_ar', 'count_employee', 'count_product', 'image')\n        }),\n    )",
        "detail": "home.admin",
        "documentation": {}
    },
    {
        "label": "ChooseUsAdmin",
        "kind": 6,
        "importPath": "home.admin",
        "description": "home.admin",
        "peekOfCode": "class ChooseUsAdmin(admin.ModelAdmin):\n    list_display = ('title_en', 'title_ar', 'image')\n    search_fields = ('title_en', 'title_ar', 'content_en', 'content_ar')\n    ordering = ('title_en',)\n    fieldsets = (\n        (None, {\n            'fields': ('title_en', 'title_ar', 'content_en', 'content_ar', 'image')\n        }),\n    )\nclass ServiceAdmin(admin.ModelAdmin):",
        "detail": "home.admin",
        "documentation": {}
    },
    {
        "label": "ServiceAdmin",
        "kind": 6,
        "importPath": "home.admin",
        "description": "home.admin",
        "peekOfCode": "class ServiceAdmin(admin.ModelAdmin):\n    list_display = ('title_en', 'title_ar', 'status', 'image', 'icon_img')\n    list_filter = ('status',)\n    search_fields = ('title_en', 'title_ar')\n    ordering = ('title_en',)\n    fieldsets = (\n        (None, {\n            'fields': ('title_en', 'title_ar', 'content_en', 'content_ar', 'image', 'icon_img', 'status')\n        }),\n    )",
        "detail": "home.admin",
        "documentation": {}
    },
    {
        "label": "SuggestionsAdmin",
        "kind": 6,
        "importPath": "home.admin",
        "description": "home.admin",
        "peekOfCode": "class SuggestionsAdmin(admin.ModelAdmin):\n    list_display = ('title_en', 'title_ar', 'status', 'icon_img')\n    list_filter = ('status',)\n    search_fields = ('title_en', 'title_ar')\n    ordering = ('title_en',)\n    fieldsets = (\n        (None, {\n            'fields': ('title_en', 'title_ar', 'content_en', 'content_ar', 'icon_img', 'status')\n        }),\n    )",
        "detail": "home.admin",
        "documentation": {}
    },
    {
        "label": "CommentsAdmin",
        "kind": 6,
        "importPath": "home.admin",
        "description": "home.admin",
        "peekOfCode": "class CommentsAdmin(admin.ModelAdmin):\n    list_display = ('fullname_en', 'fullname_ar', 'status', 'image')\n    list_filter = ('status',)\n    search_fields = ('fullname_en', 'fullname_ar', 'content_en', 'content_ar')\n    ordering = ['fullname_en', 'fullname_ar']\n    fieldsets = (\n        (None, {\n            'fields': ('fullname_en', 'fullname_ar', 'content_en', 'content_ar', 'image', 'status')\n        }),\n    )",
        "detail": "home.admin",
        "documentation": {}
    },
    {
        "label": "HomeConfig",
        "kind": 6,
        "importPath": "home.apps",
        "description": "home.apps",
        "peekOfCode": "class HomeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'home'",
        "detail": "home.apps",
        "documentation": {}
    },
    {
        "label": "Sliders",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class Sliders(models.Model):\n    title_en = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    title_ar = models.CharField(max_length=255, verbose_name=\"Title AR\")\n    sub_title_en = models.CharField(\n        max_length=255, null=True, blank=True,verbose_name=\"Sub Title EN\")\n    sub_title_ar = models.CharField(\n        max_length=255, null=True, blank=True,verbose_name=\"Sub Title AR\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "AboutUs",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class AboutUs(models.Model):\n    title_en = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    title_ar = models.CharField(max_length=255, verbose_name=\"Title AR\")\n    content_en = models.TextField(verbose_name=\"Content EN\")\n    content_ar = models.TextField(verbose_name=\"Content AR\")\n    count_employee = models.IntegerField(verbose_name=\"Number of employees\")\n    count_product = models.IntegerField(verbose_name=\"Number of products\")\n    image = models.ImageField(\n        upload_to=upload_image_about, null=True, blank=True, verbose_name='Image')\n    class Meta:",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ChooseUs",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ChooseUs(models.Model):\n    title_en = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    title_ar = models.CharField(max_length=255, verbose_name=\"Title AR\")\n    content_en = models.TextField(verbose_name=\"Content EN\")\n    content_ar = models.TextField(verbose_name=\"Content AR\")\n    image = models.ImageField(\n        upload_to=upload_image_choose_us, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'ChooseUs'\n        verbose_name_plural = 'ChooseUs'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "Service",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class Service(models.Model):\n    title_en = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    title_ar = models.CharField(max_length=255, verbose_name=\"Title AR\")\n    content_en = models.TextField(verbose_name=\"Content EN\")\n    content_ar = models.TextField(verbose_name=\"Content AR\")\n    image = models.ImageField(\n        upload_to=upload_image_service, null=True, blank=True, verbose_name='Image')\n    icon_img = models.ImageField(\n        upload_to=upload_image_service_icon, null=True, blank=True, verbose_name='Image Icon')\n    status = models.BooleanField(",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "Comments",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class Comments(models.Model):\n    image = models.ImageField(\n        upload_to=upload_image_comment, null=True, blank=True, verbose_name='Image')\n    content_en = models.TextField(verbose_name=\"Content EN\")\n    content_ar = models.TextField(verbose_name=\"Content AR\")\n    fullname_en = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Full Name EN\")\n    fullname_ar = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Full Name AR\")\n    country_en = models.CharField(",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "Suggestions",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class Suggestions(models.Model):\n    title_en = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    title_ar = models.CharField(max_length=255, verbose_name=\"Title AR\")\n    content_en = models.TextField(verbose_name=\"Content EN\")\n    content_ar = models.TextField(verbose_name=\"Content AR\")\n    icon_img = models.ImageField(\n        upload_to=upload_image_suggestions_icon, null=True, blank=True, verbose_name='Image Icon')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "FAQ",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class FAQ(models.Model):\n    question_en = models.CharField(max_length=255, verbose_name=\"Question EN\")\n    question_ar = models.CharField(max_length=255, verbose_name=\"Question AR\")\n    answer_en = models.TextField(verbose_name=\"Answer EN\")\n    answer_ar = models.TextField(verbose_name=\"Answer AR\")\n    status = models.BooleanField(default=True, verbose_name=\"Is Active?\")\n    class Meta:\n        verbose_name = \"FAQ\"\n        verbose_name_plural = \"FAQs\"\n    def __str__(self):",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "SliderEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Sliders\n        exclude = [\"title_ar\", \"sub_title_ar\"]\nclass SliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Sliders\n        exclude = [\"title_en\", \"sub_title_en\"]\nclass AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "SliderArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Sliders\n        exclude = [\"title_en\", \"sub_title_en\"]\nclass AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUs\n        exclude = [\"title_ar\", \"content_ar\"]\nclass AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUs\n        exclude = [\"title_ar\", \"content_ar\"]\nclass AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUs\n        exclude = [\"title_en\", \"content_en\"]\nclass ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUs\n        exclude = [\"title_en\", \"content_en\"]\nclass ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUs\n        exclude = [\"title_ar\", \"content_ar\"]\nclass ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUs\n        exclude = [\"title_ar\", \"content_ar\"]\nclass ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUs\n        exclude = [\"title_en\", \"content_en\"]\nclass ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUs\n        exclude = [\"title_en\", \"content_en\"]\nclass ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Service\n        exclude = [\"title_ar\", \"content_ar\"]\nclass ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Service\n        exclude = [\"title_ar\", \"content_ar\"]\nclass ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Service\n        exclude = [\"title_en\", \"content_en\"]\nclass CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Service\n        exclude = [\"title_en\", \"content_en\"]\nclass CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comments\n        exclude = [\"fullname_ar\", \"content_ar\", \"country_ar\"]\nclass CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comments\n        exclude = [\"fullname_ar\", \"content_ar\", \"country_ar\"]\nclass CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comments\n        exclude = [\"fullname_en\", \"content_en\", \"country_en\"]\nclass SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comments\n        exclude = [\"fullname_en\", \"content_en\", \"country_en\"]\nclass SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestions\n        exclude = [\"title_ar\", \"content_ar\"]\nclass SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestions\n        exclude = [\"title_ar\", \"content_ar\"]\nclass SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestions\n        exclude = [\"title_en\", \"content_en\"]\nclass FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Suggestions\n        exclude = [\"title_en\", \"content_en\"]\nclass FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQ\n        exclude = [\"question_ar\", \"answer_ar\"]\nclass FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "FAQEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQ\n        exclude = [\"question_ar\", \"answer_ar\"]\nclass FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQ\n        exclude = [\"question_en\", \"answer_en\"]",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "FAQArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQ\n        exclude = [\"question_en\", \"answer_en\"]",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "home.urls",
        "description": "home.urls",
        "peekOfCode": "app_name = \"home\"\nurlpatterns = [\n    path(\"sliders/en/\", views.SliderEnglishListView.as_view(), name=\"slider_english_list\"),\n    path(\"sliders/ar/\", views.SliderArabicListView.as_view(), name=\"slider_arabic_list\"),\n    path(\"about/en/\", views.AboutUsEnglishListView.as_view(), name=\"about_english_list\"),\n    path(\"about/ar/\", views.AboutUsArabicListView.as_view(), name=\"about_arabic_list\"),\n    path(\"choose_us/en/\", views.ChooseUsEnglishListView.as_view(), name=\"choose_us_english_list\"),\n    path(\"choose_us/ar/\", views.ChooseUsArabicListView.as_view(), name=\"choose_us_arabic_list\"),\n    path(\"service/en/\", views.ServiceEnglishListView.as_view(), name=\"service_english_list\"),\n    path(\"service/ar/\", views.ServiceArabicListView.as_view(), name=\"service_arabic_list\"),",
        "detail": "home.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "home.urls",
        "description": "home.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"sliders/en/\", views.SliderEnglishListView.as_view(), name=\"slider_english_list\"),\n    path(\"sliders/ar/\", views.SliderArabicListView.as_view(), name=\"slider_arabic_list\"),\n    path(\"about/en/\", views.AboutUsEnglishListView.as_view(), name=\"about_english_list\"),\n    path(\"about/ar/\", views.AboutUsArabicListView.as_view(), name=\"about_arabic_list\"),\n    path(\"choose_us/en/\", views.ChooseUsEnglishListView.as_view(), name=\"choose_us_english_list\"),\n    path(\"choose_us/ar/\", views.ChooseUsArabicListView.as_view(), name=\"choose_us_arabic_list\"),\n    path(\"service/en/\", views.ServiceEnglishListView.as_view(), name=\"service_english_list\"),\n    path(\"service/ar/\", views.ServiceArabicListView.as_view(), name=\"service_arabic_list\"),\n    path(\"comments/en/\", views.CommentsEnglishListView.as_view(), name=\"comments_english_list\"),",
        "detail": "home.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_sliders",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_sliders(instance, filename):\n    path = 'uploads/' + 'sliders/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_about(instance, filename):\n    path = 'uploads/' + 'abouts/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_about",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_about(instance, filename):\n    path = 'uploads/' + 'abouts/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_choose_us(instance, filename):\n    path = 'uploads/' + 'choose_us/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_choose_us",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_choose_us(instance, filename):\n    path = 'uploads/' + 'choose_us/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_service(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_service",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_service(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_service_icon(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_service_icon",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_service_icon(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_comment(instance, filename):\n    path = 'uploads/' + 'comment/' + \\\n        slugify(instance.fullname_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.fullname_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_comment",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_comment(instance, filename):\n    path = 'uploads/' + 'comment/' + \\\n        slugify(instance.fullname_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.fullname_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_suggestions_icon(instance, filename):\n    path = 'uploads/' + 'suggestions/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_suggestions_icon",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_suggestions_icon(instance, filename):\n    path = 'uploads/' + 'suggestions/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "SliderEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SliderEnglishListView(ListAPIView):\n    queryset = Sliders.objects.filter(status=True)\n    serializer_class = SliderEnglishSerializer\nclass SliderArabicListView(ListAPIView):\n    queryset = Sliders.objects.filter(status=True)\n    serializer_class = SliderArabicSerializer\n# * =================== AboutUs ===================\nclass AboutUsEnglishListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "SliderArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SliderArabicListView(ListAPIView):\n    queryset = Sliders.objects.filter(status=True)\n    serializer_class = SliderArabicSerializer\n# * =================== AboutUs ===================\nclass AboutUsEnglishListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsArabicListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class AboutUsEnglishListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsArabicListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsArabicSerializer\n# * =================== ChooseUs ===================\nclass ChooseUsEnglishListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class AboutUsArabicListView(ListAPIView):\n    queryset = AboutUs.objects.all()\n    serializer_class = AboutUsArabicSerializer\n# * =================== ChooseUs ===================\nclass ChooseUsEnglishListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsArabicListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ChooseUsEnglishListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsArabicListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n# * =================== Service ===================\nclass ServiceEnglishListView(ListAPIView):\n    queryset = Service.objects.filter(status=True)\n    serializer_class = ServiceEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ChooseUsArabicListView(ListAPIView):\n    queryset = ChooseUs.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n# * =================== Service ===================\nclass ServiceEnglishListView(ListAPIView):\n    queryset = Service.objects.filter(status=True)\n    serializer_class = ServiceEnglishSerializer\nclass ServiceArabicListView(ListAPIView):\n    queryset = Service.objects.filter(status=True)\n    serializer_class = ServiceArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ServiceEnglishListView(ListAPIView):\n    queryset = Service.objects.filter(status=True)\n    serializer_class = ServiceEnglishSerializer\nclass ServiceArabicListView(ListAPIView):\n    queryset = Service.objects.filter(status=True)\n    serializer_class = ServiceArabicSerializer\n# * =================== Comments ===================\nclass CommentsEnglishListView(ListAPIView):\n    queryset = Comments.objects.filter(status=True)\n    serializer_class = CommentsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ServiceArabicListView(ListAPIView):\n    queryset = Service.objects.filter(status=True)\n    serializer_class = ServiceArabicSerializer\n# * =================== Comments ===================\nclass CommentsEnglishListView(ListAPIView):\n    queryset = Comments.objects.filter(status=True)\n    serializer_class = CommentsEnglishSerializer\nclass CommentsArabicListView(ListAPIView):\n    queryset = Comments.objects.filter(status=True)\n    serializer_class = CommentsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class CommentsEnglishListView(ListAPIView):\n    queryset = Comments.objects.filter(status=True)\n    serializer_class = CommentsEnglishSerializer\nclass CommentsArabicListView(ListAPIView):\n    queryset = Comments.objects.filter(status=True)\n    serializer_class = CommentsArabicSerializer\n# * =================== Suggestions ===================\nclass SuggestionsEnglishListView(ListAPIView):\n    queryset = Suggestions.objects.filter(status=True)\n    serializer_class = SuggestionsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class CommentsArabicListView(ListAPIView):\n    queryset = Comments.objects.filter(status=True)\n    serializer_class = CommentsArabicSerializer\n# * =================== Suggestions ===================\nclass SuggestionsEnglishListView(ListAPIView):\n    queryset = Suggestions.objects.filter(status=True)\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsArabicListView(ListAPIView):\n    queryset = Suggestions.objects.filter(status=True)\n    serializer_class = SuggestionsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SuggestionsEnglishListView(ListAPIView):\n    queryset = Suggestions.objects.filter(status=True)\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsArabicListView(ListAPIView):\n    queryset = Suggestions.objects.filter(status=True)\n    serializer_class = SuggestionsArabicSerializer\n# * =================== FAQ ===================\nclass FAQEnglishListView(ListAPIView):\n    queryset = FAQ.objects.filter(status=True)\n    serializer_class = FAQEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SuggestionsArabicListView(ListAPIView):\n    queryset = Suggestions.objects.filter(status=True)\n    serializer_class = SuggestionsArabicSerializer\n# * =================== FAQ ===================\nclass FAQEnglishListView(ListAPIView):\n    queryset = FAQ.objects.filter(status=True)\n    serializer_class = FAQEnglishSerializer\nclass FAQArabicListView(ListAPIView):\n    queryset = FAQ.objects.filter(status=True)\n    serializer_class = FAQArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class FAQEnglishListView(ListAPIView):\n    queryset = FAQ.objects.filter(status=True)\n    serializer_class = FAQEnglishSerializer\nclass FAQArabicListView(ListAPIView):\n    queryset = FAQ.objects.filter(status=True)\n    serializer_class = FAQArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class FAQArabicListView(ListAPIView):\n    queryset = FAQ.objects.filter(status=True)\n    serializer_class = FAQArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "news.migrations.0001_initial",
        "description": "news.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='News',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255)),",
        "detail": "news.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NewsAdmin",
        "kind": 6,
        "importPath": "news.admin",
        "description": "news.admin",
        "peekOfCode": "class NewsAdmin(admin.ModelAdmin):\n    list_display = ('title_en', 'title_ar', 'status', 'image')\n    list_filter = ('status',)\n    search_fields = ('title_en', 'title_ar', 'content_en', 'content_ar')\n    ordering = ['title_en', 'title_ar']\n    fieldsets = (\n        (None, {\n            'fields': ('title_en', 'title_ar', 'content_en', 'content_ar', 'image', 'status')\n        }),\n    )",
        "detail": "news.admin",
        "documentation": {}
    },
    {
        "label": "NewsConfig",
        "kind": 6,
        "importPath": "news.apps",
        "description": "news.apps",
        "peekOfCode": "class NewsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'news'",
        "detail": "news.apps",
        "documentation": {}
    },
    {
        "label": "News",
        "kind": 6,
        "importPath": "news.models",
        "description": "news.models",
        "peekOfCode": "class News(models.Model):\n    title_en = models.CharField(max_length=255)\n    title_ar = models.CharField(max_length=255)\n    content_en = models.TextField(verbose_name=\"Content EN\")\n    content_ar = models.TextField(verbose_name=\"Content AR\")\n    image = models.ImageField(\n        upload_to=upload_image_news, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:",
        "detail": "news.models",
        "documentation": {}
    },
    {
        "label": "NewsEnglishSerializer",
        "kind": 6,
        "importPath": "news.serializers",
        "description": "news.serializers",
        "peekOfCode": "class NewsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = News\n        exclude = [\"title_ar\", \"content_ar\"]\nclass NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = News\n        exclude = [\"title_en\", \"content_en\"]",
        "detail": "news.serializers",
        "documentation": {}
    },
    {
        "label": "NewsArabicSerializer",
        "kind": 6,
        "importPath": "news.serializers",
        "description": "news.serializers",
        "peekOfCode": "class NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = News\n        exclude = [\"title_en\", \"content_en\"]",
        "detail": "news.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "news.urls",
        "description": "news.urls",
        "peekOfCode": "app_name = \"news\"\nurlpatterns = [\n    path(\"news/en/\", views.NewsEnglishListView.as_view(), name=\"news_english_list\"),\n    path(\"news/ar/\", views.NewsArabicListView.as_view(), name=\"news_arabic_list\"),\n]",
        "detail": "news.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "news.urls",
        "description": "news.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"news/en/\", views.NewsEnglishListView.as_view(), name=\"news_english_list\"),\n    path(\"news/ar/\", views.NewsArabicListView.as_view(), name=\"news_arabic_list\"),\n]",
        "detail": "news.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_news",
        "kind": 2,
        "importPath": "news.utils",
        "description": "news.utils",
        "peekOfCode": "def upload_image_news(instance, filename):\n    path = 'uploads/' + 'news/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "news.utils",
        "documentation": {}
    },
    {
        "label": "NewsEnglishListView",
        "kind": 6,
        "importPath": "news.views",
        "description": "news.views",
        "peekOfCode": "class NewsEnglishListView(ListAPIView):\n    queryset = News.objects.filter(status=True)\n    serializer_class = NewsEnglishSerializer\nclass NewsArabicListView(ListAPIView):\n    queryset = News.objects.filter(status=True)\n    serializer_class = NewsArabicSerializer",
        "detail": "news.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicListView",
        "kind": 6,
        "importPath": "news.views",
        "description": "news.views",
        "peekOfCode": "class NewsArabicListView(ListAPIView):\n    queryset = News.objects.filter(status=True)\n    serializer_class = NewsArabicSerializer",
        "detail": "news.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "regulation.migrations.0001_initial",
        "description": "regulation.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Settings',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('phone', models.CharField(max_length=20, verbose_name='Phone')),",
        "detail": "regulation.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "regulation.migrations.0002_alter_social_logo",
        "description": "regulation.migrations.0002_alter_social_logo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('regulation', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='social',\n            name='logo',\n            field=models.ImageField(blank=True, null=True, upload_to=regulation.utils.upload_image_social, verbose_name='Logo'),\n        ),",
        "detail": "regulation.migrations.0002_alter_social_logo",
        "documentation": {}
    },
    {
        "label": "SettingAdmin",
        "kind": 6,
        "importPath": "regulation.admin",
        "description": "regulation.admin",
        "peekOfCode": "class SettingAdmin(admin.ModelAdmin):\n    list_display = ('phone', 'email', 'address', 'logo')\n    list_filter = ('phone',)\n    search_fields = ('phone', 'email')\n    ordering = ('phone',)\n    fieldsets = (\n        (None, {\n            'fields': ('phone', 'email', 'address', 'logo')\n        }),\n    )",
        "detail": "regulation.admin",
        "documentation": {}
    },
    {
        "label": "SocialAdmin",
        "kind": 6,
        "importPath": "regulation.admin",
        "description": "regulation.admin",
        "peekOfCode": "class SocialAdmin(admin.ModelAdmin):\n    list_display = ('link', 'logo')\n    search_fields = ('link',)\n    ordering = ('link',)\n    fieldsets = (\n        (None, {\n            'fields': ('link', 'logo')\n        }),\n    )\nadmin.site.register(Settings, SettingAdmin)",
        "detail": "regulation.admin",
        "documentation": {}
    },
    {
        "label": "RegulationConfig",
        "kind": 6,
        "importPath": "regulation.apps",
        "description": "regulation.apps",
        "peekOfCode": "class RegulationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'regulation'",
        "detail": "regulation.apps",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "regulation.models",
        "description": "regulation.models",
        "peekOfCode": "class Settings(models.Model):\n    phone = models.CharField(max_length=20, verbose_name=\"Phone\")\n    email = models.EmailField(verbose_name=\"Email\")\n    address = models.TextField(verbose_name=\"Address\")\n    logo = models.ImageField(\n        upload_to=upload_image_setting, null=True, blank=True, verbose_name='Logo')\n    class Meta:\n        verbose_name = 'Setting'\n        verbose_name_plural = 'Settings'\n    def __str__(self):",
        "detail": "regulation.models",
        "documentation": {}
    },
    {
        "label": "Social",
        "kind": 6,
        "importPath": "regulation.models",
        "description": "regulation.models",
        "peekOfCode": "class Social(models.Model):\n    link = models.URLField(verbose_name=\"Link\")\n    logo = models.ImageField(\n        upload_to=upload_image_social, null=True, blank=True, verbose_name='Logo')\n    class Meta:\n        verbose_name = 'Social'\n        verbose_name_plural = 'Social'\n    def __str__(self):\n        return f\"{self.link}\"",
        "detail": "regulation.models",
        "documentation": {}
    },
    {
        "label": "SettingSerializer",
        "kind": 6,
        "importPath": "regulation.serializers",
        "description": "regulation.serializers",
        "peekOfCode": "class SettingSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Settings\n        fields = \"__all__\"\nclass SocialSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Social\n        fields = \"__all__\"",
        "detail": "regulation.serializers",
        "documentation": {}
    },
    {
        "label": "SocialSerializer",
        "kind": 6,
        "importPath": "regulation.serializers",
        "description": "regulation.serializers",
        "peekOfCode": "class SocialSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Social\n        fields = \"__all__\"",
        "detail": "regulation.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "regulation.urls",
        "description": "regulation.urls",
        "peekOfCode": "app_name = \"settings\"\nurlpatterns = [\n    path(\"settings/\", views.SettingListView.as_view(), name=\"setting_list\"),\n    path(\"social/\", views.SocialListView.as_view(), name=\"social_list\"),\n]",
        "detail": "regulation.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "regulation.urls",
        "description": "regulation.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"settings/\", views.SettingListView.as_view(), name=\"setting_list\"),\n    path(\"social/\", views.SocialListView.as_view(), name=\"social_list\"),\n]",
        "detail": "regulation.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_setting",
        "kind": 2,
        "importPath": "regulation.utils",
        "description": "regulation.utils",
        "peekOfCode": "def upload_image_setting(instance, filename):\n    path = 'uploads/' + 'setting/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_social(instance, filename):\n    path = 'uploads/' + 'social/' + \\\n        slugify(\"one\", allow_unicode=True)\n    name = str(time.time()) + '-' + str('one') + '-' + filename\n    return path + '/' + name",
        "detail": "regulation.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_social",
        "kind": 2,
        "importPath": "regulation.utils",
        "description": "regulation.utils",
        "peekOfCode": "def upload_image_social(instance, filename):\n    path = 'uploads/' + 'social/' + \\\n        slugify(\"one\", allow_unicode=True)\n    name = str(time.time()) + '-' + str('one') + '-' + filename\n    return path + '/' + name",
        "detail": "regulation.utils",
        "documentation": {}
    },
    {
        "label": "SettingListView",
        "kind": 6,
        "importPath": "regulation.views",
        "description": "regulation.views",
        "peekOfCode": "class SettingListView(ListAPIView):\n    queryset = Settings.objects.all()\n    serializer_class = SettingSerializer\nclass SocialListView(ListAPIView):\n    queryset = Social.objects.all()\n    serializer_class = SocialSerializer",
        "detail": "regulation.views",
        "documentation": {}
    },
    {
        "label": "SocialListView",
        "kind": 6,
        "importPath": "regulation.views",
        "description": "regulation.views",
        "peekOfCode": "class SocialListView(ListAPIView):\n    queryset = Social.objects.all()\n    serializer_class = SocialSerializer",
        "detail": "regulation.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]