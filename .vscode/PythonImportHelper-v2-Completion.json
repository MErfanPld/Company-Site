[
    {
        "label": "aboutus.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aboutus.utils",
        "description": "aboutus.utils",
        "detail": "aboutus.utils",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "aboutus.utils",
        "description": "aboutus.utils",
        "isExtraImport": true,
        "detail": "aboutus.utils",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "GenericAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "RetrieveUpdateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "accounts.managers",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "accounts.managers",
        "description": "accounts.managers",
        "detail": "accounts.managers",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "accounts.managers",
        "description": "accounts.managers",
        "isExtraImport": true,
        "detail": "accounts.managers",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseBackend",
        "importPath": "django.contrib.auth.backends",
        "description": "django.contrib.auth.backends",
        "isExtraImport": true,
        "detail": "django.contrib.auth.backends",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenError",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularRedocView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "contact.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "contact.utils",
        "description": "contact.utils",
        "detail": "contact.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_contact_sliders",
        "importPath": "contact.utils",
        "description": "contact.utils",
        "isExtraImport": true,
        "detail": "contact.utils",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "home.models",
        "description": "home.models",
        "isExtraImport": true,
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "home.models",
        "description": "home.models",
        "isExtraImport": true,
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "news.models",
        "description": "news.models",
        "isExtraImport": true,
        "detail": "news.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "isExtraImport": true,
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "ProductArabic",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "ProductEnglish",
        "importPath": "products.models",
        "description": "products.models",
        "isExtraImport": true,
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "home.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "home.utils",
        "description": "home.utils",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "news.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "news.utils",
        "description": "news.utils",
        "detail": "news.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_news",
        "importPath": "news.utils",
        "description": "news.utils",
        "isExtraImport": true,
        "detail": "news.utils",
        "documentation": {}
    },
    {
        "label": "products.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "products.utils",
        "description": "products.utils",
        "detail": "products.utils",
        "documentation": {}
    },
    {
        "label": "regulation.utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "regulation.utils",
        "description": "regulation.utils",
        "detail": "regulation.utils",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "aboutus.migrations.0001_initial",
        "description": "aboutus.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AchievementArabic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255, verbose_name='Title')),",
        "detail": "aboutus.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "aboutus.migrations.0002_aboutslidersarabic_aboutslidersenglish",
        "description": "aboutus.migrations.0002_aboutslidersarabic_aboutslidersenglish",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('aboutus', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AboutSlidersArabic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255, verbose_name='Title')),",
        "detail": "aboutus.migrations.0002_aboutslidersarabic_aboutslidersenglish",
        "documentation": {}
    },
    {
        "label": "AboutusConfig",
        "kind": 6,
        "importPath": "aboutus.apps",
        "description": "aboutus.apps",
        "peekOfCode": "class AboutusConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'aboutus'",
        "detail": "aboutus.apps",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglish",
        "kind": 6,
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "peekOfCode": "class AboutSlidersEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'About Us Slider English'",
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabic",
        "kind": 6,
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "peekOfCode": "class AboutSlidersArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'About Us Slider Arabic'",
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "AchievementEnglish",
        "kind": 6,
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "peekOfCode": "class AchievementEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    content = models.TextField(verbose_name=\"Content\")\n    image = models.ImageField(\n        upload_to=upload_image_achievement, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Achievement English'\n        verbose_name_plural = 'Achievement English'",
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "AchievementArabic",
        "kind": 6,
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "peekOfCode": "class AchievementArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    content = models.TextField(verbose_name=\"Content\")\n    image = models.ImageField(\n        upload_to=upload_image_achievement, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Achievement Arabic'\n        verbose_name_plural = 'Achievement Arabic'",
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "TeamEnglish",
        "kind": 6,
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "peekOfCode": "class TeamEnglish(models.Model):\n    fullname = models.CharField(max_length=255)\n    skill = models.CharField(max_length=500)\n    image = models.ImageField(\n        upload_to=upload_image_team, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'Team English'\n        verbose_name_plural = 'Team English'\n    def __str__(self):\n        return f\"{self.fullname} | {self.image}\"",
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "TeamArabic",
        "kind": 6,
        "importPath": "aboutus.models",
        "description": "aboutus.models",
        "peekOfCode": "class TeamArabic(models.Model):\n    fullname = models.CharField(max_length=255)\n    skill = models.CharField(max_length=500)\n    image = models.ImageField(\n        upload_to=upload_image_team, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'Team Arabic'\n        verbose_name_plural = 'Team Arabic'\n    def __str__(self):\n        return f\"{self.fullname} | {self.image}\"",
        "detail": "aboutus.models",
        "documentation": {}
    },
    {
        "label": "AboutSliderEnglishSerializer",
        "kind": 6,
        "importPath": "aboutus.serializers",
        "description": "aboutus.serializers",
        "peekOfCode": "class AboutSliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersEnglish\n        fields = \"__all__\"\nclass AboutSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersArabic\n        fields = \"__all__\"\nclass AchievementEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "aboutus.serializers",
        "documentation": {}
    },
    {
        "label": "AboutSliderArabicSerializer",
        "kind": 6,
        "importPath": "aboutus.serializers",
        "description": "aboutus.serializers",
        "peekOfCode": "class AboutSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersArabic\n        fields = \"__all__\"\nclass AchievementEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementEnglish\n        fields = \"__all__\"\nclass AchievementArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "aboutus.serializers",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishSerializer",
        "kind": 6,
        "importPath": "aboutus.serializers",
        "description": "aboutus.serializers",
        "peekOfCode": "class AchievementEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementEnglish\n        fields = \"__all__\"\nclass AchievementArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementArabic\n        fields = \"__all__\"\nclass TeamEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "aboutus.serializers",
        "documentation": {}
    },
    {
        "label": "AchievementArabicSerializer",
        "kind": 6,
        "importPath": "aboutus.serializers",
        "description": "aboutus.serializers",
        "peekOfCode": "class AchievementArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementArabic\n        fields = \"__all__\"\nclass TeamEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamEnglish\n        fields = \"__all__\"\nclass TeamArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "aboutus.serializers",
        "documentation": {}
    },
    {
        "label": "TeamEnglishSerializer",
        "kind": 6,
        "importPath": "aboutus.serializers",
        "description": "aboutus.serializers",
        "peekOfCode": "class TeamEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamEnglish\n        fields = \"__all__\"\nclass TeamArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamArabic\n        fields = \"__all__\"",
        "detail": "aboutus.serializers",
        "documentation": {}
    },
    {
        "label": "TeamArabicSerializer",
        "kind": 6,
        "importPath": "aboutus.serializers",
        "description": "aboutus.serializers",
        "peekOfCode": "class TeamArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamArabic\n        fields = \"__all__\"",
        "detail": "aboutus.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "aboutus.urls",
        "description": "aboutus.urls",
        "peekOfCode": "app_name = \"about-us\"\nurlpatterns = [\n    path(\"about-us/slider/en/\", views.AboutSliderEnglishListView.as_view(),\n         name=\"about_slider_english_list\"),\n    path(\"about-us/slider/ar/\", views.AboutSliderArabicListView.as_view(),\n         name=\"about_slider_arabic_list\"),\n    path(\"about-us/achievement/en/\", views.AchievementEnglishListView.as_view(),\n         name=\"achievement_english_list\"),\n    path(\"about-us/achievement/ar/\", views.AchievementArabicListView.as_view(),\n         name=\"achievement_arabic_list\"),",
        "detail": "aboutus.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "aboutus.urls",
        "description": "aboutus.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"about-us/slider/en/\", views.AboutSliderEnglishListView.as_view(),\n         name=\"about_slider_english_list\"),\n    path(\"about-us/slider/ar/\", views.AboutSliderArabicListView.as_view(),\n         name=\"about_slider_arabic_list\"),\n    path(\"about-us/achievement/en/\", views.AchievementEnglishListView.as_view(),\n         name=\"achievement_english_list\"),\n    path(\"about-us/achievement/ar/\", views.AchievementArabicListView.as_view(),\n         name=\"achievement_arabic_list\"),\n    path(\"about-us/team/en/\", views.TeamEnglishListView.as_view(),",
        "detail": "aboutus.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_achievement",
        "kind": 2,
        "importPath": "aboutus.utils",
        "description": "aboutus.utils",
        "peekOfCode": "def upload_image_achievement(instance, filename):\n    path = 'uploads/' + 'achievement/' + \\\n        slugify(instance.title, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title) + '-' + filename\n    return path + '/' + name\ndef upload_image_team(instance, filename):\n    path = 'uploads/' + 'team/' + \\\n        slugify(instance.fullname, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.fullname) + '-' + filename\n    return path + '/' + name",
        "detail": "aboutus.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_team",
        "kind": 2,
        "importPath": "aboutus.utils",
        "description": "aboutus.utils",
        "peekOfCode": "def upload_image_team(instance, filename):\n    path = 'uploads/' + 'team/' + \\\n        slugify(instance.fullname, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.fullname) + '-' + filename\n    return path + '/' + name\ndef upload_image_sliders(instance, filename):\n    path = 'uploads/' + 'about/' +'sliders/' + \\\n        slugify(instance.title, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title) + '-' + filename\n    return path + '/' + name",
        "detail": "aboutus.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_sliders",
        "kind": 2,
        "importPath": "aboutus.utils",
        "description": "aboutus.utils",
        "peekOfCode": "def upload_image_sliders(instance, filename):\n    path = 'uploads/' + 'about/' +'sliders/' + \\\n        slugify(instance.title, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title) + '-' + filename\n    return path + '/' + name",
        "detail": "aboutus.utils",
        "documentation": {}
    },
    {
        "label": "AboutSliderEnglishListView",
        "kind": 6,
        "importPath": "aboutus.views",
        "description": "aboutus.views",
        "peekOfCode": "class AboutSliderEnglishListView(ListAPIView):\n    queryset = AboutSlidersEnglish.objects.filter(status=True)\n    serializer_class = AboutSliderEnglishSerializer\nclass AboutSliderArabicListView(ListAPIView):\n    queryset = AboutSlidersArabic.objects.filter(status=True)\n    serializer_class = AboutSliderArabicSerializer\n# * =================== Achievement ===================\nclass AchievementEnglishListView(ListAPIView):\n    queryset = AchievementEnglish.objects.filter(status=True)\n    serializer_class = AchievementEnglishSerializer",
        "detail": "aboutus.views",
        "documentation": {}
    },
    {
        "label": "AboutSliderArabicListView",
        "kind": 6,
        "importPath": "aboutus.views",
        "description": "aboutus.views",
        "peekOfCode": "class AboutSliderArabicListView(ListAPIView):\n    queryset = AboutSlidersArabic.objects.filter(status=True)\n    serializer_class = AboutSliderArabicSerializer\n# * =================== Achievement ===================\nclass AchievementEnglishListView(ListAPIView):\n    queryset = AchievementEnglish.objects.filter(status=True)\n    serializer_class = AchievementEnglishSerializer\nclass AchievementArabicListView(ListAPIView):\n    queryset = AchievementArabic.objects.filter(status=True)\n    serializer_class = AchievementArabicSerializer",
        "detail": "aboutus.views",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishListView",
        "kind": 6,
        "importPath": "aboutus.views",
        "description": "aboutus.views",
        "peekOfCode": "class AchievementEnglishListView(ListAPIView):\n    queryset = AchievementEnglish.objects.filter(status=True)\n    serializer_class = AchievementEnglishSerializer\nclass AchievementArabicListView(ListAPIView):\n    queryset = AchievementArabic.objects.filter(status=True)\n    serializer_class = AchievementArabicSerializer\n# * =================== Team ===================\nclass TeamEnglishListView(ListAPIView):\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer",
        "detail": "aboutus.views",
        "documentation": {}
    },
    {
        "label": "AchievementArabicListView",
        "kind": 6,
        "importPath": "aboutus.views",
        "description": "aboutus.views",
        "peekOfCode": "class AchievementArabicListView(ListAPIView):\n    queryset = AchievementArabic.objects.filter(status=True)\n    serializer_class = AchievementArabicSerializer\n# * =================== Team ===================\nclass TeamEnglishListView(ListAPIView):\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\nclass TeamArabicListView(ListAPIView):\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer",
        "detail": "aboutus.views",
        "documentation": {}
    },
    {
        "label": "TeamEnglishListView",
        "kind": 6,
        "importPath": "aboutus.views",
        "description": "aboutus.views",
        "peekOfCode": "class TeamEnglishListView(ListAPIView):\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\nclass TeamArabicListView(ListAPIView):\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer",
        "detail": "aboutus.views",
        "documentation": {}
    },
    {
        "label": "TeamArabicListView",
        "kind": 6,
        "importPath": "aboutus.views",
        "description": "aboutus.views",
        "peekOfCode": "class TeamArabicListView(ListAPIView):\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer",
        "detail": "aboutus.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0001_initial",
        "description": "accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "accounts.admin",
        "description": "accounts.admin",
        "peekOfCode": "class UserAdmin(BaseUserAdmin):\n    list_display = ('username', 'email', 'first_name', 'last_name',\n                    'phoneNumber', 'is_superuser')\n    list_filter = ('is_superuser',)\n    readonly_fields = ('last_login',)\n    fieldsets = (\n        (\"Main\", {'fields': ('username', 'email', 'first_name',\n         'last_name', 'phoneNumber', 'is_superuser')}),\n        ('Permissions',\n         {'fields': ('is_active', 'is_staff', 'last_login')}),",
        "detail": "accounts.admin",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "PhoneAuthenticationBackend",
        "kind": 6,
        "importPath": "accounts.authentication",
        "description": "accounts.authentication",
        "peekOfCode": "class PhoneAuthenticationBackend(BaseBackend):\n    def authenticate(self, request, phone_number=None, password=None, **kwargs):\n        try:\n            user = User.objects.get(phone_number=phone_number)\n            if user.check_password(password):\n                return user\n        except User.DoesNotExist:\n            return None",
        "detail": "accounts.authentication",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "accounts.authentication",
        "description": "accounts.authentication",
        "peekOfCode": "User = get_user_model()\nclass PhoneAuthenticationBackend(BaseBackend):\n    def authenticate(self, request, phone_number=None, password=None, **kwargs):\n        try:\n            user = User.objects.get(phone_number=phone_number)\n            if user.check_password(password):\n                return user\n        except User.DoesNotExist:\n            return None",
        "detail": "accounts.authentication",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "accounts.managers",
        "description": "accounts.managers",
        "peekOfCode": "class UserManager(BaseUserManager):\n    use_in_migrations = True\n    def normalize_phoneNumber(self, phoneNumber):\n        # اینجا می‌توانید کدهایی برای نرمال‌سازی شماره تلفن اضافه کنید\n        # برای مثال حذف فضاها، پر کردن شماره تلفن با پیش‌شماره و غیره\n        return phoneNumber.strip()  # به عنوان نمونه فقط فضای اضافی را حذف می‌کند\n    def _create_user(self, phoneNumber , username , password, **extra_fields):\n        if not phoneNumber:\n            raise ValueError('The given phoneNumber must be set')\n        if not username:",
        "detail": "accounts.managers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    username = models.CharField(('username'), max_length=30, unique=True)\n    email = models.EmailField(('email'), unique=True)\n    first_name = models.CharField(('first name'), max_length=30, blank=True)\n    last_name = models.CharField(('last name'), max_length=30, blank=True)\n    phoneNumber = models.CharField(('phone number'), max_length=11, blank=True, unique=True)  # اضافه کردن unique=True\n    date_joined = models.DateTimeField(('date joined'), default=timezone.now)\n    last_login = models.DateTimeField(('last login'), auto_now=True)\n    is_superuser = models.BooleanField(('is superuser'), default=False)\n    is_active = models.BooleanField(('active'), default=True)",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUserSerializer",
        "kind": 6,
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "peekOfCode": "class CustomUserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        exclude = (\"email_verified_at\", \"date_joined\", \"last_login\",\n                   \"is_superuser\", \"is_active\", \"is_staff\", \"level\",)\nclass UserRegisterationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = (\"username\", \"email\", \"phoneNumber\", \"password\")\n        extra_kwargs = {\"password\": {\"write_only\": True}}",
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "UserRegisterationSerializer",
        "kind": 6,
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "peekOfCode": "class UserRegisterationSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = (\"username\", \"email\", \"phoneNumber\", \"password\")\n        extra_kwargs = {\"password\": {\"write_only\": True}}\n    def create(self, validated_data):\n        return User.objects.create_user(**validated_data)\nclass UserLoginSerializer(serializers.Serializer):\n    phoneNumber = serializers.CharField()\n    password = serializers.CharField()",
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "kind": 6,
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "peekOfCode": "class UserLoginSerializer(serializers.Serializer):\n    phoneNumber = serializers.CharField()\n    password = serializers.CharField()\n    def validate(self, data):\n        phoneNumber = data.get('phoneNumber')\n        password = data.get('password')\n        user = authenticate(username=phoneNumber, password=password)\n        if user is None:\n            raise serializers.ValidationError(\"Incorrect Credentials\")\n        return user",
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "app_name = \"accounts\"\nurlpatterns = [\n    path(\"accounts/register/\", views.UserRegisterationAPIView.as_view(), name=\"create-user\"),\n    path(\"accounts/login/\", views.UserLoginAPIView.as_view(), name=\"login-user\"),\n    path(\"token/refresh/\", TokenRefreshView.as_view(), name=\"token-refresh\"),\n    path(\"accounts/logout/\", views.UserLogoutAPIView.as_view(), name=\"logout-user\"),\n]",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"accounts/register/\", views.UserRegisterationAPIView.as_view(), name=\"create-user\"),\n    path(\"accounts/login/\", views.UserLoginAPIView.as_view(), name=\"login-user\"),\n    path(\"token/refresh/\", TokenRefreshView.as_view(), name=\"token-refresh\"),\n    path(\"accounts/logout/\", views.UserLogoutAPIView.as_view(), name=\"logout-user\"),\n]",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "UserRegisterationAPIView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class UserRegisterationAPIView(GenericAPIView):\n    permission_classes = (AllowAny,)\n    serializer_class = serializers.UserRegisterationSerializer\n    def post(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        user = serializer.save()\n        token = RefreshToken.for_user(user)\n        data = serializer.data\n        data[\"tokens\"] = {\"refresh\": str(",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "UserLoginAPIView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class UserLoginAPIView(APIView):\n    permission_classes = (AllowAny,)\n    serializer_class = serializers.UserLoginSerializer\n    def post(self, request, *args, **kwargs):\n        serializer = self.serializer_class(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        user = serializer.validated_data  # user being authenticated\n        if not user:\n            return Response({\"detail\": \"Incorrect Credentials\"}, status=status.HTTP_401_UNAUTHORIZED)\n        # اگر احراز هویت موفق بود، توکن جدید بسازید",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "UserLogoutAPIView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class UserLogoutAPIView(GenericAPIView):\n    permission_classes = (IsAuthenticated,)\n    def post(self, request):\n        try:\n            refresh_token = request.data[\"refresh_token\"]\n            token = RefreshToken(refresh_token)\n            token.blacklist()\n            return Response(status=status.HTTP_205_RESET_CONTENT)\n        except Exception as e:\n            return Response(status=status.HTTP_400_BAD_REQUEST)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "User = get_user_model()\nclass UserRegisterationAPIView(GenericAPIView):\n    permission_classes = (AllowAny,)\n    serializer_class = serializers.UserRegisterationSerializer\n    def post(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        user = serializer.save()\n        token = RefreshToken.for_user(user)\n        data = serializer.data",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.asgi",
        "description": "config.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "config.asgi",
        "documentation": {}
    },
    {
        "label": "APICorsMiddleware",
        "kind": 6,
        "importPath": "config.middleware",
        "description": "config.middleware",
        "peekOfCode": "class APICorsMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        response = self.get_response(request)\n        response[\"Access-Control-Allow-Origin\"] = \"*\"\n        response[\"Access-Control-Allow-Methods\"] = \"GET, POST, PUT, DELETE, OPTIONS\"\n        response[\"Access-Control-Allow-Headers\"] = \"Content-Type, Authorization\"\n        return response",
        "detail": "config.middleware",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-q)brqd3@-@$9ui07y8mbc+hav761=g=5rx@vu8u_j3--f85cpy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-q)brqd3@-@$9ui07y8mbc+hav761=g=5rx@vu8u_j3--f85cpy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'drf_spectacular',\n    'rest_framework_simplejwt',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    # 'corsheaders.middleware.CorsMiddleware',\n    'config.middleware.APICorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ROOT_URLCONF = 'config.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WSGI_APPLICATION = 'config.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\n# STATIC_URL = 'static/'\nSTATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_URL = '/site_statics/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"staticfiles\")\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'accounts.User'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"static_cdn\")\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'accounts.User'\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'accounts.User'\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"static_cdn\", \"media_root\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'accounts.User'\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'accounts.User'\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),\n    'DEFAULT_THROTTLE_RATES': {\n        'login': '2/day'\n    },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'accounts.User'\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),\n    'DEFAULT_THROTTLE_RATES': {\n        'login': '2/day'\n    },\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework_simplejwt.authentication.JWTAuthentication\",\n        \"rest_framework.authentication.SessionAuthentication\",\n    ),\n    'DEFAULT_THROTTLE_RATES': {\n        'login': '2/day'\n    },\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'Project API',\n    'DESCRIPTION': 'Project description',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n}\n# CORS_ALLOWED_ORIGINS = [\n#     'http://localhost:3030',\n# ]\nSIMPLE_JWT = {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(seconds=5),\n    'ROTATE_REFRESH_TOKENS': True,\n    'BLACKLIST_AFTER_ROTATION': True\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "urlpatterns = [\n    path('schema/', SpectacularAPIView.as_view(), name='schema'),\n    path('schema/swagger-ui/',\n         SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),\n    path('schema/redoc/',\n         SpectacularRedocView.as_view(url_name='schema'), name='redoc'),\n    path('admin/', admin.site.urls),\n    path('', include('home.urls')),\n    path('', include('regulation.urls')),\n    path('', include('contact.urls')),",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.wsgi",
        "description": "config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "config.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact.migrations.0001_initial",
        "description": "contact.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContactUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('fullname', models.CharField(max_length=255, verbose_name='Full Name')),",
        "detail": "contact.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact.migrations.0002_alter_contactus_status",
        "description": "contact.migrations.0002_alter_contactus_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contact', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='contactus',\n            name='status',\n            field=models.BooleanField(default=False, verbose_name='Is Read?'),\n        ),",
        "detail": "contact.migrations.0002_alter_contactus_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact.migrations.0003_contactslidersarabic_contactslidersenglish",
        "description": "contact.migrations.0003_contactslidersarabic_contactslidersenglish",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contact', '0002_alter_contactus_status'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContactSlidersArabic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255, verbose_name='Title')),",
        "detail": "contact.migrations.0003_contactslidersarabic_contactslidersenglish",
        "documentation": {}
    },
    {
        "label": "ContactUsAdmin",
        "kind": 6,
        "importPath": "contact.admin",
        "description": "contact.admin",
        "peekOfCode": "class ContactUsAdmin(admin.ModelAdmin):\n    list_display = ('fullname', 'email', 'phone','status')\n    list_filter = ('status',)\n    search_fields = ('fullname', 'email', 'phone')\nadmin.site.register(ContactUs, ContactUsAdmin)\nadmin.site.register(ContactSlidersArabic)\nadmin.site.register(ContactSlidersEnglish)",
        "detail": "contact.admin",
        "documentation": {}
    },
    {
        "label": "ContactConfig",
        "kind": 6,
        "importPath": "contact.apps",
        "description": "contact.apps",
        "peekOfCode": "class ContactConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contact'",
        "detail": "contact.apps",
        "documentation": {}
    },
    {
        "label": "ContactUs",
        "kind": 6,
        "importPath": "contact.models",
        "description": "contact.models",
        "peekOfCode": "class ContactUs(models.Model):\n    fullname = models.CharField(max_length=255, verbose_name=\"Full Name\")\n    email = models.EmailField(verbose_name=\"Email\")\n    phone = models.CharField(max_length=11, verbose_name=\"Phone\")\n    content = models.TextField(verbose_name=\"Content\")\n    status = models.BooleanField(default=False, verbose_name=\"Is Read?\")\n    created_at = models.DateTimeField(\n        auto_now_add=True,\n        verbose_name=\"Date Submit\"\n    )",
        "detail": "contact.models",
        "documentation": {}
    },
    {
        "label": "ContactSlidersEnglish",
        "kind": 6,
        "importPath": "contact.models",
        "description": "contact.models",
        "peekOfCode": "class ContactSlidersEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_contact_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Contact Slider English'",
        "detail": "contact.models",
        "documentation": {}
    },
    {
        "label": "ContactSlidersArabic",
        "kind": 6,
        "importPath": "contact.models",
        "description": "contact.models",
        "peekOfCode": "class ContactSlidersArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_contact_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Contact Slider Arabic'",
        "detail": "contact.models",
        "documentation": {}
    },
    {
        "label": "ContactUsSerializer",
        "kind": 6,
        "importPath": "contact.serializers",
        "description": "contact.serializers",
        "peekOfCode": "class ContactUsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ContactUs\n        fields = ['fullname', 'email', 'phone', 'content']\nclass ContactSliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ContactSlidersEnglish\n        fields = \"__all__\"\nclass ContactSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "contact.serializers",
        "documentation": {}
    },
    {
        "label": "ContactSliderEnglishSerializer",
        "kind": 6,
        "importPath": "contact.serializers",
        "description": "contact.serializers",
        "peekOfCode": "class ContactSliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ContactSlidersEnglish\n        fields = \"__all__\"\nclass ContactSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ContactSlidersArabic\n        fields = \"__all__\"",
        "detail": "contact.serializers",
        "documentation": {}
    },
    {
        "label": "ContactSliderArabicSerializer",
        "kind": 6,
        "importPath": "contact.serializers",
        "description": "contact.serializers",
        "peekOfCode": "class ContactSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ContactSlidersArabic\n        fields = \"__all__\"",
        "detail": "contact.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "contact.urls",
        "description": "contact.urls",
        "peekOfCode": "app_name = \"contacts\"\nrouter = DefaultRouter()\nrouter.register(r'contacts', ContactUsViewSet)\nurlpatterns = [\n    path('', include(router.urls)),\n    path(\"contacts/slider/en/\", ContactSliderEnglishListView.as_view(),\n         name=\"contact_slider_english_list\"),\n    path(\"contacts/slider/ar/\", ContactSliderArabicListView.as_view(),\n         name=\"contact_slider_arabic_list\"),\n]",
        "detail": "contact.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "contact.urls",
        "description": "contact.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'contacts', ContactUsViewSet)\nurlpatterns = [\n    path('', include(router.urls)),\n    path(\"contacts/slider/en/\", ContactSliderEnglishListView.as_view(),\n         name=\"contact_slider_english_list\"),\n    path(\"contacts/slider/ar/\", ContactSliderArabicListView.as_view(),\n         name=\"contact_slider_arabic_list\"),\n]",
        "detail": "contact.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "contact.urls",
        "description": "contact.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n    path(\"contacts/slider/en/\", ContactSliderEnglishListView.as_view(),\n         name=\"contact_slider_english_list\"),\n    path(\"contacts/slider/ar/\", ContactSliderArabicListView.as_view(),\n         name=\"contact_slider_arabic_list\"),\n]",
        "detail": "contact.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_contact_sliders",
        "kind": 2,
        "importPath": "contact.utils",
        "description": "contact.utils",
        "peekOfCode": "def upload_image_contact_sliders(instance, filename):\n    path = 'uploads/' + 'contact/' +'sliders/' + \\\n        slugify(instance.title, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title) + '-' + filename\n    return path + '/' + name",
        "detail": "contact.utils",
        "documentation": {}
    },
    {
        "label": "ContactUsViewSet",
        "kind": 6,
        "importPath": "contact.views",
        "description": "contact.views",
        "peekOfCode": "class ContactUsViewSet(viewsets.ModelViewSet):\n    queryset = ContactUs.objects.all()\n    serializer_class = ContactUsSerializer\n# * =================== Slider ===================\nclass ContactSliderEnglishListView(ListAPIView):\n    queryset = ContactSlidersEnglish.objects.filter(status=True)\n    serializer_class = ContactSliderEnglishSerializer\nclass ContactSliderArabicListView(ListAPIView):\n    queryset = ContactSlidersArabic.objects.filter(status=True)\n    serializer_class = ContactSliderArabicSerializer",
        "detail": "contact.views",
        "documentation": {}
    },
    {
        "label": "ContactSliderEnglishListView",
        "kind": 6,
        "importPath": "contact.views",
        "description": "contact.views",
        "peekOfCode": "class ContactSliderEnglishListView(ListAPIView):\n    queryset = ContactSlidersEnglish.objects.filter(status=True)\n    serializer_class = ContactSliderEnglishSerializer\nclass ContactSliderArabicListView(ListAPIView):\n    queryset = ContactSlidersArabic.objects.filter(status=True)\n    serializer_class = ContactSliderArabicSerializer",
        "detail": "contact.views",
        "documentation": {}
    },
    {
        "label": "ContactSliderArabicListView",
        "kind": 6,
        "importPath": "contact.views",
        "description": "contact.views",
        "peekOfCode": "class ContactSliderArabicListView(ListAPIView):\n    queryset = ContactSlidersArabic.objects.filter(status=True)\n    serializer_class = ContactSliderArabicSerializer",
        "detail": "contact.views",
        "documentation": {}
    },
    {
        "label": "DashboardConfig",
        "kind": 6,
        "importPath": "dashboard.apps",
        "description": "dashboard.apps",
        "peekOfCode": "class DashboardConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'dashboard'",
        "detail": "dashboard.apps",
        "documentation": {}
    },
    {
        "label": "SliderEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class SliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SlidersEnglish\n        fields = \"__all__\"\nclass SliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SlidersArabic\n        fields = \"__all__\"\nclass AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "SliderArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class SliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SlidersArabic\n        fields = \"__all__\"\nclass AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsEnglish\n        fields = \"__all__\"\nclass AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsEnglish\n        fields = \"__all__\"\nclass AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsArabic\n        fields = \"__all__\"\nclass ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsArabic\n        fields = \"__all__\"\nclass ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsEnglish\n        fields = \"__all__\"\nclass ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsEnglish\n        fields = \"__all__\"\nclass ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsArabic\n        fields = \"__all__\"\nclass ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsArabic\n        fields = \"__all__\"\nclass ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceEnglish\n        fields = \"__all__\"\nclass ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceEnglish\n        fields = \"__all__\"\nclass ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceArabic\n        fields = \"__all__\"\nclass CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceArabic\n        fields = \"__all__\"\nclass CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsEnglish\n        fields = \"__all__\"\nclass CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsEnglish\n        fields = \"__all__\"\nclass CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsArabic\n        fields = \"__all__\"\nclass SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsArabic\n        fields = \"__all__\"\nclass SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsEnglish\n        fields = \"__all__\"\nclass SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsEnglish\n        fields = \"__all__\"\nclass SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsArabic\n        fields = \"__all__\"\nclass FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsArabic\n        fields = \"__all__\"\nclass FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQEnglish\n        fields = \"__all__\"\nclass FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "FAQEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQEnglish\n        fields = \"__all__\"\nclass FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQArabic\n        fields = \"__all__\"\nclass NewsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "FAQArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQArabic\n        fields = \"__all__\"\nclass NewsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsEnglish\n        fields = \"__all__\"\nclass NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "NewsEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class NewsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsEnglish\n        fields = \"__all__\"\nclass NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsArabic\n        fields = \"__all__\"\nclass ProductEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "NewsArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsArabic\n        fields = \"__all__\"\nclass ProductEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductEnglish\n        fields = \"__all__\"\nclass ProductArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ProductEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ProductEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductEnglish\n        fields = \"__all__\"\nclass ProductArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductArabic\n        fields = \"__all__\"\nclass AboutSlidersEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "ProductArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class ProductArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductArabic\n        fields = \"__all__\"\nclass AboutSlidersEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersEnglish\n        fields = \"__all__\"\nclass AboutSlidersArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AboutSlidersEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersEnglish\n        fields = \"__all__\"\nclass AboutSlidersArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersArabic\n        fields = \"__all__\"\nclass AchievementEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AboutSlidersArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutSlidersArabic\n        fields = \"__all__\"\nclass AchievementEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementEnglish\n        fields = \"__all__\"\nclass AchievementArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AchievementEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementEnglish\n        fields = \"__all__\"\nclass AchievementArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementArabic\n        fields = \"__all__\"\nclass TeamEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "AchievementArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class AchievementArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AchievementArabic\n        fields = \"__all__\"\nclass TeamEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamEnglish\n        fields = \"__all__\"\nclass TeamArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "TeamEnglishSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class TeamEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamEnglish\n        fields = \"__all__\"\nclass TeamArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamArabic\n        fields = \"__all__\"",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "TeamArabicSerializer",
        "kind": 6,
        "importPath": "dashboard.serializers",
        "description": "dashboard.serializers",
        "peekOfCode": "class TeamArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TeamArabic\n        fields = \"__all__\"",
        "detail": "dashboard.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "dashboard.urls",
        "description": "dashboard.urls",
        "peekOfCode": "app_name = \"dashboard\"\nurlpatterns = [\n    # =============== Slider ===============\n    path(\"en/sliders/\", views.SlidersEnglishListView.as_view(),\n         name=\"en_slider_dashboard_list\"),\n    path(\"en/sliders/create/\", views.SlidersEnglishCreateView.as_view(),\n         name=\"en_slider_dashboard_create\"),\n    path(\"en/sliders/<int:id>/\", views.SlidersEnglishDetailView.as_view(),\n         name=\"en_slider_dashboard_detail\"),\n    path(\"en/sliders/<int:id>/update/\", views.SlidersEnglishUpdateView.as_view(),",
        "detail": "dashboard.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "dashboard.urls",
        "description": "dashboard.urls",
        "peekOfCode": "urlpatterns = [\n    # =============== Slider ===============\n    path(\"en/sliders/\", views.SlidersEnglishListView.as_view(),\n         name=\"en_slider_dashboard_list\"),\n    path(\"en/sliders/create/\", views.SlidersEnglishCreateView.as_view(),\n         name=\"en_slider_dashboard_create\"),\n    path(\"en/sliders/<int:id>/\", views.SlidersEnglishDetailView.as_view(),\n         name=\"en_slider_dashboard_detail\"),\n    path(\"en/sliders/<int:id>/update/\", views.SlidersEnglishUpdateView.as_view(),\n         name=\"en_slider_dashboard_update\"),",
        "detail": "dashboard.urls",
        "documentation": {}
    },
    {
        "label": "SlidersEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\nclass SlidersEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\nclass SlidersEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\nclass SlidersEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\n    lookup_field = 'id'\nclass SlidersEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\n    lookup_field = 'id'\nclass SlidersEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\n    lookup_field = 'id'\nclass SlidersEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersEnglish.objects.all()\n    serializer_class = SliderEnglishSerializer\n    lookup_field = 'id'\n# * =================== Slider Arabic Dashboard ===================\nclass SlidersArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\nclass SlidersArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\nclass SlidersArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\nclass SlidersArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\n    lookup_field = 'id'\nclass SlidersArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\n    lookup_field = 'id'\nclass SlidersArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\n    lookup_field = 'id'\nclass SlidersArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SlidersArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SlidersArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SlidersArabic.objects.all()\n    serializer_class = SliderArabicSerializer\n    lookup_field = 'id'\n# * =================== AboutUs English Dashboard ===================\nclass AboutUsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\n    lookup_field = 'id'\nclass AboutUsEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\n    lookup_field = 'id'\nclass AboutUsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\n    lookup_field = 'id'\nclass AboutUsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\n    lookup_field = 'id'\n# * =================== AboutUs Arabic Dashboard ===================\nclass AboutUsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\nclass AboutUsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\nclass AboutUsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\nclass AboutUsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n    lookup_field = 'id'\nclass AboutUsArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n    lookup_field = 'id'\nclass AboutUsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n    lookup_field = 'id'\nclass AboutUsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutUsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n    lookup_field = 'id'\n# # * =================== ChooseUs English Dashboard ===================\nclass ChooseUsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\n    lookup_field = 'id'\nclass ChooseUsEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\n    lookup_field = 'id'\nclass ChooseUsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\n    lookup_field = 'id'\nclass ChooseUsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\n    lookup_field = 'id'\n# # * =================== ChooseUs Arabic Dashboard ===================\nclass ChooseUsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\nclass ChooseUsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\nclass ChooseUsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\nclass ChooseUsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n    lookup_field = 'id'\nclass ChooseUsArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n    lookup_field = 'id'\nclass ChooseUsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n    lookup_field = 'id'\nclass ChooseUsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ChooseUsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n    lookup_field = 'id'\n# # * =================== Service English Dashboard ===================\nclass ServiceEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\nclass ServiceEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\nclass ServiceEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\nclass ServiceEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\n    lookup_field = 'id'\nclass ServiceEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\n    lookup_field = 'id'\nclass ServiceEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\n    lookup_field = 'id'\nclass ServiceEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceEnglish.objects.all()\n    serializer_class = ServiceEnglishSerializer\n    lookup_field = 'id'\n# # * =================== Service Arabic Dashboard ===================\nclass ServiceArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\nclass ServiceArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\nclass ServiceArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\nclass ServiceArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\n    lookup_field = 'id'\nclass ServiceArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\n    lookup_field = 'id'\nclass ServiceArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\n    lookup_field = 'id'\nclass ServiceArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ServiceArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ServiceArabic.objects.all()\n    serializer_class = ServiceArabicSerializer\n    lookup_field = 'id'\n# # * =================== Comments English Dashboard ===================\nclass CommentsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\nclass CommentsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\nclass CommentsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\nclass CommentsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\n    lookup_field = 'id'\nclass CommentsEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\n    lookup_field = 'id'\nclass CommentsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\n    lookup_field = 'id'\nclass CommentsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsEnglish.objects.all()\n    serializer_class = CommentsEnglishSerializer\n    lookup_field = 'id'\n# # * =================== Comments Arabic Dashboard ===================\nclass CommentsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\nclass CommentsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\nclass CommentsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\nclass CommentsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\n    lookup_field = 'id'\nclass CommentsArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\n    lookup_field = 'id'\nclass CommentsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\n    lookup_field = 'id'\nclass CommentsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class CommentsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = CommentsArabic.objects.all()\n    serializer_class = CommentsArabicSerializer\n    lookup_field = 'id'\n# * =================== Suggestions English Dashboard ===================\nclass SuggestionsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\n    lookup_field = 'id'\nclass SuggestionsEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\n    lookup_field = 'id'\nclass SuggestionsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\n    lookup_field = 'id'\nclass SuggestionsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsEnglish.objects.all()\n    serializer_class = SuggestionsEnglishSerializer\n    lookup_field = 'id'\n# * =================== Suggestions Arabic Dashboard ===================\nclass SuggestionsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\nclass SuggestionsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\nclass SuggestionsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\nclass SuggestionsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\n    lookup_field = 'id'\nclass SuggestionsArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\n    lookup_field = 'id'\nclass SuggestionsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\n    lookup_field = 'id'\nclass SuggestionsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class SuggestionsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = SuggestionsArabic.objects.all()\n    serializer_class = SuggestionsArabicSerializer\n    lookup_field = 'id'\n# * =================== FAQ English Dashboard ===================\nclass FAQEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\nclass FAQEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\nclass FAQEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\nclass FAQEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\n    lookup_field = 'id'\nclass FAQEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\n    lookup_field = 'id'\nclass FAQEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\n    lookup_field = 'id'\nclass FAQEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQEnglish.objects.all()\n    serializer_class = FAQEnglishSerializer\n    lookup_field = 'id'\n# * =================== FAQ Arabic Dashboard ===================\nclass FAQArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\nclass FAQArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\nclass FAQArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\nclass FAQArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\n    lookup_field = 'id'\nclass FAQArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\n    lookup_field = 'id'\nclass FAQArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\n    lookup_field = 'id'\nclass FAQArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class FAQArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = FAQArabic.objects.all()\n    serializer_class = FAQArabicSerializer\n    lookup_field = 'id'\n# * =================== News English Dashboard ===================\nclass NewsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\nclass NewsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\nclass NewsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\nclass NewsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\n    lookup_field = 'id'\nclass NewsEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\n    lookup_field = 'id'\nclass NewsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\n    lookup_field = 'id'\nclass NewsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsEnglish.objects.all()\n    serializer_class = NewsEnglishSerializer\n    lookup_field = 'id'\n# * =================== News Arabic Dashboard ===================\nclass NewsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\nclass NewsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\nclass NewsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\nclass NewsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\n    lookup_field = 'id'\nclass NewsArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\n    lookup_field = 'id'\nclass NewsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\n    lookup_field = 'id'\nclass NewsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class NewsArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = NewsArabic.objects.all()\n    serializer_class = NewsArabicSerializer\n    lookup_field = 'id'\n# * =================== Product English Dashboard ===================\nclass ProductEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\nclass ProductEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\nclass ProductEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\nclass ProductEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\n    lookup_field = 'id'\nclass ProductEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\n    lookup_field = 'id'\nclass ProductEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\n    lookup_field = 'id'\nclass ProductEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductEnglish.objects.all()\n    serializer_class = ProductEnglishSerializer\n    lookup_field = 'id'\n# * =================== Product Arabic Dashboard ===================\nclass ProductArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\nclass ProductArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\nclass ProductArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\nclass ProductArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\n    lookup_field = 'id'\nclass ProductArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\n    lookup_field = 'id'\nclass ProductArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\n    lookup_field = 'id'\nclass ProductArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "ProductArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class ProductArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = ProductArabic.objects.all()\n    serializer_class = ProductArabicSerializer\n    lookup_field = 'id'\n# * =================== About Sliders English Dashboard ===================\nclass AboutSlidersEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\nclass AboutSlidersEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\nclass AboutSlidersEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\nclass AboutSlidersEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\n    lookup_field = 'id'\nclass AboutSlidersEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\n    lookup_field = 'id'\nclass AboutSlidersEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\n    lookup_field = 'id'\nclass AboutSlidersEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersEnglish.objects.all()\n    serializer_class = AboutSlidersEnglishSerializer\n    lookup_field = 'id'\n# * =================== About Sliders Arabic Dashboard ===================\nclass AboutSlidersArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\nclass AboutSlidersArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\nclass AboutSlidersArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\nclass AboutSlidersArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\n    lookup_field = 'id'\nclass AboutSlidersArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\n    lookup_field = 'id'\nclass AboutSlidersArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\n    lookup_field = 'id'\nclass AboutSlidersArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AboutSlidersArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AboutSlidersArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AboutSlidersArabic.objects.all()\n    serializer_class = AboutSlidersArabicSerializer\n    lookup_field = 'id'\n# * =================== Achievement English Dashboard ===================\nclass AchievementEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\nclass AchievementEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\nclass AchievementEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\nclass AchievementEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\n    lookup_field = 'id'\nclass AchievementEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\n    lookup_field = 'id'\nclass AchievementEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\n    lookup_field = 'id'\nclass AchievementEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementEnglish.objects.all()\n    serializer_class = AchievementEnglishSerializer\n    lookup_field = 'id'\n# * =================== Achievement Arabic Dashboard ===================\nclass AchievementArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\nclass AchievementArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\nclass AchievementArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\nclass AchievementArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\n    lookup_field = 'id'\nclass AchievementArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\n    lookup_field = 'id'\nclass AchievementArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\n    lookup_field = 'id'\nclass AchievementArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "AchievementArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class AchievementArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = AchievementArabic.objects.all()\n    serializer_class = AchievementArabicSerializer\n    lookup_field = 'id'\n# * =================== Team English Dashboard ===================\nclass TeamEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamEnglishListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamEnglishListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\nclass TeamEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\nclass TeamEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamEnglishCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamEnglishCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\nclass TeamEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\n    lookup_field = 'id'\nclass TeamEnglishUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamEnglishDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamEnglishDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\n    lookup_field = 'id'\nclass TeamEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamEnglishUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamEnglishUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\n    lookup_field = 'id'\nclass TeamEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamEnglishDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamEnglishDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamEnglish.objects.all()\n    serializer_class = TeamEnglishSerializer\n    lookup_field = 'id'\n# * =================== Team Arabic Dashboard ===================\nclass TeamArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamArabicListView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamArabicListView(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\nclass TeamArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\nclass TeamArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamArabicCreateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamArabicCreateView(CreateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\nclass TeamArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\n    lookup_field = 'id'\nclass TeamArabicUpdateView(UpdateAPIView):",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamArabicDetailView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamArabicDetailView(RetrieveAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\n    lookup_field = 'id'\nclass TeamArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamArabicUpdateView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamArabicUpdateView(UpdateAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\n    lookup_field = 'id'\nclass TeamArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "TeamArabicDeleteView",
        "kind": 6,
        "importPath": "dashboard.views",
        "description": "dashboard.views",
        "peekOfCode": "class TeamArabicDeleteView(DestroyAPIView):\n    permission_classes = [IsAuthenticated]\n    queryset = TeamArabic.objects.all()\n    serializer_class = TeamArabicSerializer\n    lookup_field = 'id'",
        "detail": "dashboard.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0001_initial",
        "description": "home.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AboutUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255, verbose_name='Title EN')),",
        "detail": "home.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0002_alter_service_icon_img",
        "description": "home.migrations.0002_alter_service_icon_img",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='service',\n            name='icon_img',\n            field=models.ImageField(blank=True, null=True, upload_to=home.utils.upload_image_service_icon, verbose_name='Image Icon'),\n        ),",
        "detail": "home.migrations.0002_alter_service_icon_img",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0003_remove_comments_fullname_comments_fullname_ar_and_more",
        "description": "home.migrations.0003_remove_comments_fullname_comments_fullname_ar_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0002_alter_service_icon_img'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='comments',\n            name='fullname',\n        ),\n        migrations.AddField(",
        "detail": "home.migrations.0003_remove_comments_fullname_comments_fullname_ar_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0004_suggestions",
        "description": "home.migrations.0004_suggestions",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0003_remove_comments_fullname_comments_fullname_ar_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Suggestions',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255, verbose_name='Title EN')),",
        "detail": "home.migrations.0004_suggestions",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0005_faq_alter_comments_status_alter_service_status_and_more",
        "description": "home.migrations.0005_faq_alter_comments_status_alter_service_status_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0004_suggestions'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='FAQ',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('question_en', models.CharField(max_length=255, verbose_name='Question EN')),",
        "detail": "home.migrations.0005_faq_alter_comments_status_alter_service_status_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0006_alter_sliders_sub_title_ar_and_more",
        "description": "home.migrations.0006_alter_sliders_sub_title_ar_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0005_faq_alter_comments_status_alter_service_status_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='sliders',\n            name='sub_title_ar',\n            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Sub Title AR'),\n        ),",
        "detail": "home.migrations.0006_alter_sliders_sub_title_ar_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0007_comments_country_ar_comments_country_en",
        "description": "home.migrations.0007_comments_country_ar_comments_country_en",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0006_alter_sliders_sub_title_ar_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='comments',\n            name='country_ar',\n            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Country EN'),\n        ),",
        "detail": "home.migrations.0007_comments_country_ar_comments_country_en",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0008_aboutusarabic_aboutusenglish_chooseusarabic_and_more",
        "description": "home.migrations.0008_aboutusarabic_aboutusenglish_chooseusarabic_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0007_comments_country_ar_comments_country_en'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AboutUsArabic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255, verbose_name='Title')),",
        "detail": "home.migrations.0008_aboutusarabic_aboutusenglish_chooseusarabic_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0009_remove_slidersarabic_title_ar_and_more",
        "description": "home.migrations.0009_remove_slidersarabic_title_ar_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0008_aboutusarabic_aboutusenglish_chooseusarabic_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='slidersarabic',\n            name='title_ar',\n        ),\n        migrations.AlterField(",
        "detail": "home.migrations.0009_remove_slidersarabic_title_ar_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "home.migrations.0010_serviceslidersarabic_serviceslidersenglish",
        "description": "home.migrations.0010_serviceslidersarabic_serviceslidersenglish",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('home', '0009_remove_slidersarabic_title_ar_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ServiceSlidersArabic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255, verbose_name='Title')),",
        "detail": "home.migrations.0010_serviceslidersarabic_serviceslidersenglish",
        "documentation": {}
    },
    {
        "label": "HomeConfig",
        "kind": 6,
        "importPath": "home.apps",
        "description": "home.apps",
        "peekOfCode": "class HomeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'home'",
        "detail": "home.apps",
        "documentation": {}
    },
    {
        "label": "SlidersEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class SlidersEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Slider English'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "SlidersArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class SlidersArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Slider Arabic'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class AboutUsEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    content = models.TextField(verbose_name=\"Content\")\n    count_employee = models.IntegerField(verbose_name=\"Number of employees\")\n    count_product = models.IntegerField(verbose_name=\"Number of products\")\n    image = models.ImageField(\n        upload_to=upload_image_about, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'AboutUs English'\n        verbose_name_plural = 'AboutUs English'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "AboutUsArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class AboutUsArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    content = models.TextField(verbose_name=\"Content\")\n    count_employee = models.IntegerField(verbose_name=\"Number of employees\")\n    count_product = models.IntegerField(verbose_name=\"Number of products\")\n    image = models.ImageField(\n        upload_to=upload_image_about, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'AboutUs Arabic'\n        verbose_name_plural = 'AboutUs Arabic'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ChooseUsEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_choose_us, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'ChooseUs English'\n        verbose_name_plural = 'ChooseUs English'\n    def __str__(self):\n        return f\"{self.title} | {self.image}\"",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ChooseUsArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_choose_us, null=True, blank=True, verbose_name='Image')\n    class Meta:\n        verbose_name = 'ChooseUs Arabic'\n        verbose_name_plural = 'ChooseUs Arabic'\n    def __str__(self):\n        return f\"{self.title} | {self.image}\"",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ServiceEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ServiceEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_service, null=True, blank=True, verbose_name='Image')\n    icon_img = models.ImageField(\n        upload_to=upload_image_service_icon, null=True, blank=True, verbose_name='Image Icon')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ServiceArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ServiceArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_service, null=True, blank=True, verbose_name='Image')\n    icon_img = models.ImageField(\n        upload_to=upload_image_service_icon, null=True, blank=True, verbose_name='Image Icon')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "CommentsEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class CommentsEnglish(models.Model):\n    image = models.ImageField(\n        upload_to=upload_image_comment, null=True, blank=True, verbose_name='Image')\n    content = models.TextField(verbose_name=\"Content EN\")\n    fullname = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Full Name EN\")\n    country = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Country EN\")\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "CommentsArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class CommentsArabic(models.Model):\n    image = models.ImageField(\n        upload_to=upload_image_comment, null=True, blank=True, verbose_name='Image')\n    content = models.TextField(verbose_name=\"Content EN\")\n    fullname = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Full Name EN\")\n    country = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Country EN\")\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class SuggestionsEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    content = models.TextField(verbose_name=\"Content EN\")\n    icon_img = models.ImageField(\n        upload_to=upload_image_suggestions_icon, null=True, blank=True, verbose_name='Image Icon')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Suggestions English'\n        verbose_name_plural = 'Suggestions English'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class SuggestionsArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title EN\")\n    content = models.TextField(verbose_name=\"Content EN\")\n    icon_img = models.ImageField(\n        upload_to=upload_image_suggestions_icon, null=True, blank=True, verbose_name='Image Icon')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Suggestions Arabic'\n        verbose_name_plural = 'Suggestions Arabic'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "FAQEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class FAQEnglish(models.Model):\n    question = models.CharField(max_length=255, verbose_name=\"Question EN\")\n    answer = models.TextField(verbose_name=\"Answer EN\")\n    status = models.BooleanField(default=True, verbose_name=\"Is Active?\")\n    class Meta:\n        verbose_name = \"FAQ English\"\n        verbose_name_plural = \"FAQs English\"\n    def __str__(self):\n        return f\"{self.question} |{self.status} \"\nclass FAQArabic(models.Model):",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "FAQArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class FAQArabic(models.Model):\n    question = models.CharField(max_length=255, verbose_name=\"Question EN\")\n    answer = models.TextField(verbose_name=\"Answer EN\")\n    status = models.BooleanField(default=True, verbose_name=\"Is Active?\")\n    class Meta:\n        verbose_name = \"FAQ Arabic\"\n        verbose_name_plural = \"FAQs Arabic\"\n    def __str__(self):\n        return f\"{self.question} |{self.status} \"\nclass ServiceSlidersEnglish(models.Model):",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ServiceSlidersEnglish",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ServiceSlidersEnglish(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Service Slider English'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "ServiceSlidersArabic",
        "kind": 6,
        "importPath": "home.models",
        "description": "home.models",
        "peekOfCode": "class ServiceSlidersArabic(models.Model):\n    title = models.CharField(max_length=255, verbose_name=\"Title\")\n    sub_title = models.CharField(\n        max_length=255, null=True, blank=True, verbose_name=\"Sub Title\")\n    image = models.ImageField(\n        upload_to=upload_image_sliders, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Service Slider Arabic'",
        "detail": "home.models",
        "documentation": {}
    },
    {
        "label": "SliderEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SlidersEnglish\n        fields = \"__all__\"\nclass SliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SlidersArabic\n        fields = \"__all__\"\nclass AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "SliderArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SlidersArabic\n        fields = \"__all__\"\nclass AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsEnglish\n        fields = \"__all__\"\nclass AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class AboutUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsEnglish\n        fields = \"__all__\"\nclass AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsArabic\n        fields = \"__all__\"\nclass ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class AboutUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = AboutUsArabic\n        fields = \"__all__\"\nclass ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsEnglish\n        fields = \"__all__\"\nclass ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ChooseUsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsEnglish\n        fields = \"__all__\"\nclass ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsArabic\n        fields = \"__all__\"\nclass ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ChooseUsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ChooseUsArabic\n        fields = \"__all__\"\nclass ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceEnglish\n        fields = \"__all__\"\nclass ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ServiceEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceEnglish\n        fields = \"__all__\"\nclass ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceArabic\n        fields = \"__all__\"\nclass CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ServiceArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceArabic\n        fields = \"__all__\"\nclass CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsEnglish\n        fields = \"__all__\"\nclass CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class CommentsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsEnglish\n        fields = \"__all__\"\nclass CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsArabic\n        fields = \"__all__\"\nclass SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "CommentsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class CommentsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommentsArabic\n        fields = \"__all__\"\nclass SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsEnglish\n        fields = \"__all__\"\nclass SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SuggestionsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsEnglish\n        fields = \"__all__\"\nclass SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsArabic\n        fields = \"__all__\"\nclass FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class SuggestionsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SuggestionsArabic\n        fields = \"__all__\"\nclass FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQEnglish\n        fields = \"__all__\"\nclass FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "FAQEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class FAQEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQEnglish\n        fields = \"__all__\"\nclass FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQArabic\n        fields = \"__all__\"\nclass ServiceSliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "FAQArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class FAQArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = FAQArabic\n        fields = \"__all__\"\nclass ServiceSliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceSlidersEnglish\n        fields = \"__all__\"\nclass ServiceSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceSliderEnglishSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ServiceSliderEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceSlidersEnglish\n        fields = \"__all__\"\nclass ServiceSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceSlidersArabic\n        fields = \"__all__\"",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "ServiceSliderArabicSerializer",
        "kind": 6,
        "importPath": "home.serializers",
        "description": "home.serializers",
        "peekOfCode": "class ServiceSliderArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceSlidersArabic\n        fields = \"__all__\"",
        "detail": "home.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "home.urls",
        "description": "home.urls",
        "peekOfCode": "app_name = \"home\"\nurlpatterns = [\n    path(\"sliders/en/\", views.SliderEnglishListView.as_view(),\n         name=\"slider_english_list\"),\n    path(\"sliders/ar/\", views.SliderArabicListView.as_view(),\n         name=\"slider_arabic_list\"),\n    path(\"about/en/\", views.AboutUsEnglishListView.as_view(),\n         name=\"about_english_list\"),\n    path(\"about/ar/\", views.AboutUsArabicListView.as_view(),\n         name=\"about_arabic_list\"),",
        "detail": "home.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "home.urls",
        "description": "home.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"sliders/en/\", views.SliderEnglishListView.as_view(),\n         name=\"slider_english_list\"),\n    path(\"sliders/ar/\", views.SliderArabicListView.as_view(),\n         name=\"slider_arabic_list\"),\n    path(\"about/en/\", views.AboutUsEnglishListView.as_view(),\n         name=\"about_english_list\"),\n    path(\"about/ar/\", views.AboutUsArabicListView.as_view(),\n         name=\"about_arabic_list\"),\n    path(\"choose_us/en/\", views.ChooseUsEnglishListView.as_view(),",
        "detail": "home.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_sliders",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_sliders(instance, filename):\n    path = 'uploads/' + 'sliders/' + \\\n        slugify(instance.title, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title) + '-' + filename\n    return path + '/' + name\ndef upload_image_about(instance, filename):\n    path = 'uploads/' + 'abouts/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_about",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_about(instance, filename):\n    path = 'uploads/' + 'abouts/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_choose_us(instance, filename):\n    path = 'uploads/' + 'choose_us/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_choose_us",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_choose_us(instance, filename):\n    path = 'uploads/' + 'choose_us/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_service(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_service",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_service(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_service_icon(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_service_icon",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_service_icon(instance, filename):\n    path = 'uploads/' + 'service/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_comment(instance, filename):\n    path = 'uploads/' + 'comment/' + \\\n        slugify(instance.fullname_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.fullname_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_comment",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_comment(instance, filename):\n    path = 'uploads/' + 'comment/' + \\\n        slugify(instance.fullname_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.fullname_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_suggestions_icon(instance, filename):\n    path = 'uploads/' + 'suggestions/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_suggestions_icon",
        "kind": 2,
        "importPath": "home.utils",
        "description": "home.utils",
        "peekOfCode": "def upload_image_suggestions_icon(instance, filename):\n    path = 'uploads/' + 'suggestions/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "home.utils",
        "documentation": {}
    },
    {
        "label": "SliderEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SliderEnglishListView(ListAPIView):\n    queryset = SlidersEnglish.objects.filter(status=True)\n    serializer_class = SliderEnglishSerializer\nclass SliderArabicListView(ListAPIView):\n    queryset = SlidersArabic.objects.filter(status=True)\n    serializer_class = SliderArabicSerializer\n# * =================== AboutUs ===================\nclass AboutUsEnglishListView(ListAPIView):\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "SliderArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SliderArabicListView(ListAPIView):\n    queryset = SlidersArabic.objects.filter(status=True)\n    serializer_class = SliderArabicSerializer\n# * =================== AboutUs ===================\nclass AboutUsEnglishListView(ListAPIView):\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsArabicListView(ListAPIView):\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "AboutUsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class AboutUsEnglishListView(ListAPIView):\n    queryset = AboutUsEnglish.objects.all()\n    serializer_class = AboutUsEnglishSerializer\nclass AboutUsArabicListView(ListAPIView):\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n# * =================== ChooseUs ===================\nclass ChooseUsEnglishListView(ListAPIView):\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "AboutUsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class AboutUsArabicListView(ListAPIView):\n    queryset = AboutUsArabic.objects.all()\n    serializer_class = AboutUsArabicSerializer\n# * =================== ChooseUs ===================\nclass ChooseUsEnglishListView(ListAPIView):\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsArabicListView(ListAPIView):\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ChooseUsEnglishListView(ListAPIView):\n    queryset = ChooseUsEnglish.objects.all()\n    serializer_class = ChooseUsEnglishSerializer\nclass ChooseUsArabicListView(ListAPIView):\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n# * =================== Service ===================\nclass ServiceEnglishListView(ListAPIView):\n    queryset = ServiceEnglish.objects.filter(status=True)\n    serializer_class = ServiceEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ChooseUsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ChooseUsArabicListView(ListAPIView):\n    queryset = ChooseUsArabic.objects.all()\n    serializer_class = ChooseUsArabicSerializer\n# * =================== Service ===================\nclass ServiceEnglishListView(ListAPIView):\n    queryset = ServiceEnglish.objects.filter(status=True)\n    serializer_class = ServiceEnglishSerializer\nclass ServiceArabicListView(ListAPIView):\n    queryset = ServiceArabic.objects.filter(status=True)\n    serializer_class = ServiceArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ServiceEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ServiceEnglishListView(ListAPIView):\n    queryset = ServiceEnglish.objects.filter(status=True)\n    serializer_class = ServiceEnglishSerializer\nclass ServiceArabicListView(ListAPIView):\n    queryset = ServiceArabic.objects.filter(status=True)\n    serializer_class = ServiceArabicSerializer\n# * =================== Comments ===================\nclass CommentsEnglishListView(ListAPIView):\n    queryset = CommentsEnglish.objects.filter(status=True)\n    serializer_class = CommentsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ServiceArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ServiceArabicListView(ListAPIView):\n    queryset = ServiceArabic.objects.filter(status=True)\n    serializer_class = ServiceArabicSerializer\n# * =================== Comments ===================\nclass CommentsEnglishListView(ListAPIView):\n    queryset = CommentsEnglish.objects.filter(status=True)\n    serializer_class = CommentsEnglishSerializer\nclass CommentsArabicListView(ListAPIView):\n    queryset = CommentsArabic.objects.filter(status=True)\n    serializer_class = CommentsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "CommentsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class CommentsEnglishListView(ListAPIView):\n    queryset = CommentsEnglish.objects.filter(status=True)\n    serializer_class = CommentsEnglishSerializer\nclass CommentsArabicListView(ListAPIView):\n    queryset = CommentsArabic.objects.filter(status=True)\n    serializer_class = CommentsArabicSerializer\n# * =================== Suggestions ===================\nclass SuggestionsEnglishListView(ListAPIView):\n    queryset = SuggestionsEnglish.objects.filter(status=True)\n    serializer_class = SuggestionsEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "CommentsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class CommentsArabicListView(ListAPIView):\n    queryset = CommentsArabic.objects.filter(status=True)\n    serializer_class = CommentsArabicSerializer\n# * =================== Suggestions ===================\nclass SuggestionsEnglishListView(ListAPIView):\n    queryset = SuggestionsEnglish.objects.filter(status=True)\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsArabicListView(ListAPIView):\n    queryset = SuggestionsArabic.objects.filter(status=True)\n    serializer_class = SuggestionsArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SuggestionsEnglishListView(ListAPIView):\n    queryset = SuggestionsEnglish.objects.filter(status=True)\n    serializer_class = SuggestionsEnglishSerializer\nclass SuggestionsArabicListView(ListAPIView):\n    queryset = SuggestionsArabic.objects.filter(status=True)\n    serializer_class = SuggestionsArabicSerializer\n# * =================== FAQ ===================\nclass FAQEnglishListView(ListAPIView):\n    queryset = FAQEnglish.objects.filter(status=True)\n    serializer_class = FAQEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "SuggestionsArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class SuggestionsArabicListView(ListAPIView):\n    queryset = SuggestionsArabic.objects.filter(status=True)\n    serializer_class = SuggestionsArabicSerializer\n# * =================== FAQ ===================\nclass FAQEnglishListView(ListAPIView):\n    queryset = FAQEnglish.objects.filter(status=True)\n    serializer_class = FAQEnglishSerializer\nclass FAQArabicListView(ListAPIView):\n    queryset = FAQArabic.objects.filter(status=True)\n    serializer_class = FAQArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "FAQEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class FAQEnglishListView(ListAPIView):\n    queryset = FAQEnglish.objects.filter(status=True)\n    serializer_class = FAQEnglishSerializer\nclass FAQArabicListView(ListAPIView):\n    queryset = FAQArabic.objects.filter(status=True)\n    serializer_class = FAQArabicSerializer\n# * =================== Service Slider ===================\nclass ServiceSliderEnglishListView(ListAPIView):\n    queryset = ServiceSlidersEnglish.objects.filter(status=True)\n    serializer_class = ServiceSliderEnglishSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "FAQArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class FAQArabicListView(ListAPIView):\n    queryset = FAQArabic.objects.filter(status=True)\n    serializer_class = FAQArabicSerializer\n# * =================== Service Slider ===================\nclass ServiceSliderEnglishListView(ListAPIView):\n    queryset = ServiceSlidersEnglish.objects.filter(status=True)\n    serializer_class = ServiceSliderEnglishSerializer\nclass ServiceSliderArabicListView(ListAPIView):\n    queryset = ServiceSlidersArabic.objects.filter(status=True)\n    serializer_class = ServiceSliderArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ServiceSliderEnglishListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ServiceSliderEnglishListView(ListAPIView):\n    queryset = ServiceSlidersEnglish.objects.filter(status=True)\n    serializer_class = ServiceSliderEnglishSerializer\nclass ServiceSliderArabicListView(ListAPIView):\n    queryset = ServiceSlidersArabic.objects.filter(status=True)\n    serializer_class = ServiceSliderArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "ServiceSliderArabicListView",
        "kind": 6,
        "importPath": "home.views",
        "description": "home.views",
        "peekOfCode": "class ServiceSliderArabicListView(ListAPIView):\n    queryset = ServiceSlidersArabic.objects.filter(status=True)\n    serializer_class = ServiceSliderArabicSerializer",
        "detail": "home.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "news.migrations.0001_initial",
        "description": "news.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='News',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255)),",
        "detail": "news.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "news.migrations.0002_newsarabic_newsenglish_delete_news",
        "description": "news.migrations.0002_newsarabic_newsenglish_delete_news",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('news', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NewsArabic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255)),",
        "detail": "news.migrations.0002_newsarabic_newsenglish_delete_news",
        "documentation": {}
    },
    {
        "label": "NewsConfig",
        "kind": 6,
        "importPath": "news.apps",
        "description": "news.apps",
        "peekOfCode": "class NewsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'news'",
        "detail": "news.apps",
        "documentation": {}
    },
    {
        "label": "NewsEnglish",
        "kind": 6,
        "importPath": "news.models",
        "description": "news.models",
        "peekOfCode": "class NewsEnglish(models.Model):\n    title = models.CharField(max_length=255)\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_news, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'New English'\n        verbose_name_plural = 'News English'",
        "detail": "news.models",
        "documentation": {}
    },
    {
        "label": "NewsArabic",
        "kind": 6,
        "importPath": "news.models",
        "description": "news.models",
        "peekOfCode": "class NewsArabic(models.Model):\n    title = models.CharField(max_length=255)\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_news, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'New Arabic'\n        verbose_name_plural = 'News Arabic'",
        "detail": "news.models",
        "documentation": {}
    },
    {
        "label": "NewsEnglishSerializer",
        "kind": 6,
        "importPath": "news.serializers",
        "description": "news.serializers",
        "peekOfCode": "class NewsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsEnglish\n        fields = \"__all__\"\nclass NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsArabic\n        fields = \"__all__\"",
        "detail": "news.serializers",
        "documentation": {}
    },
    {
        "label": "NewsArabicSerializer",
        "kind": 6,
        "importPath": "news.serializers",
        "description": "news.serializers",
        "peekOfCode": "class NewsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = NewsArabic\n        fields = \"__all__\"",
        "detail": "news.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "news.urls",
        "description": "news.urls",
        "peekOfCode": "app_name = \"news\"\nurlpatterns = [\n    path(\"news/en/\", views.NewsEnglishListView.as_view(), name=\"news_english_list\"),\n    path(\"news/ar/\", views.NewsArabicListView.as_view(), name=\"news_arabic_list\"),\n]",
        "detail": "news.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "news.urls",
        "description": "news.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"news/en/\", views.NewsEnglishListView.as_view(), name=\"news_english_list\"),\n    path(\"news/ar/\", views.NewsArabicListView.as_view(), name=\"news_arabic_list\"),\n]",
        "detail": "news.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_news",
        "kind": 2,
        "importPath": "news.utils",
        "description": "news.utils",
        "peekOfCode": "def upload_image_news(instance, filename):\n    path = 'uploads/' + 'news/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "news.utils",
        "documentation": {}
    },
    {
        "label": "NewsEnglishListView",
        "kind": 6,
        "importPath": "news.views",
        "description": "news.views",
        "peekOfCode": "class NewsEnglishListView(ListAPIView):\n    queryset = NewsEnglish.objects.filter(status=True)\n    serializer_class = NewsEnglishSerializer\nclass NewsArabicListView(ListAPIView):\n    queryset = NewsArabic.objects.filter(status=True)\n    serializer_class = NewsArabicSerializer",
        "detail": "news.views",
        "documentation": {}
    },
    {
        "label": "NewsArabicListView",
        "kind": 6,
        "importPath": "news.views",
        "description": "news.views",
        "peekOfCode": "class NewsArabicListView(ListAPIView):\n    queryset = NewsArabic.objects.filter(status=True)\n    serializer_class = NewsArabicSerializer",
        "detail": "news.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0001_initial",
        "description": "products.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Product',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title_en', models.CharField(max_length=255)),",
        "detail": "products.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0002_productarbic_productenglish_delete_product",
        "description": "products.migrations.0002_productarbic_productenglish_delete_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ProductArbic',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=255)),",
        "detail": "products.migrations.0002_productarbic_productenglish_delete_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0003_rename_productarbic_productarabic",
        "description": "products.migrations.0003_rename_productarbic_productarabic",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0002_productarbic_productenglish_delete_product'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='ProductArbic',\n            new_name='ProductArabic',\n        ),\n    ]",
        "detail": "products.migrations.0003_rename_productarbic_productarabic",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "products.migrations.0004_remove_productarabic_desc_remove_productenglish_desc",
        "description": "products.migrations.0004_remove_productarabic_desc_remove_productenglish_desc",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('products', '0003_rename_productarbic_productarabic'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='productarabic',\n            name='desc',\n        ),\n        migrations.RemoveField(",
        "detail": "products.migrations.0004_remove_productarabic_desc_remove_productenglish_desc",
        "documentation": {}
    },
    {
        "label": "ProductsConfig",
        "kind": 6,
        "importPath": "products.apps",
        "description": "products.apps",
        "peekOfCode": "class ProductsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'products'",
        "detail": "products.apps",
        "documentation": {}
    },
    {
        "label": "ProductEnglish",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class ProductEnglish(models.Model):\n    title = models.CharField(max_length=255)\n    price = models.FloatField()\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_product, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Product English'",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "ProductArabic",
        "kind": 6,
        "importPath": "products.models",
        "description": "products.models",
        "peekOfCode": "class ProductArabic(models.Model):\n    title = models.CharField(max_length=255)\n    price = models.FloatField()\n    content = models.TextField(verbose_name=\"Content EN\")\n    image = models.ImageField(\n        upload_to=upload_image_product, null=True, blank=True, verbose_name='Image')\n    status = models.BooleanField(\n        default=True, verbose_name='Is Active?')\n    class Meta:\n        verbose_name = 'Product Arbic'",
        "detail": "products.models",
        "documentation": {}
    },
    {
        "label": "ProductEnglishSerializer",
        "kind": 6,
        "importPath": "products.serializers",
        "description": "products.serializers",
        "peekOfCode": "class ProductEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductEnglish\n        fields = \"__all__\"\nclass ProductArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductArabic\n        fields = \"__all__\"",
        "detail": "products.serializers",
        "documentation": {}
    },
    {
        "label": "ProductArabicSerializer",
        "kind": 6,
        "importPath": "products.serializers",
        "description": "products.serializers",
        "peekOfCode": "class ProductArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ProductArabic\n        fields = \"__all__\"",
        "detail": "products.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "products.urls",
        "description": "products.urls",
        "peekOfCode": "app_name = \"product\"\nurlpatterns = [\n    path(\"product/en/\", views.ProductEnglishListView.as_view(), name=\"product_english_list\"),\n    path(\"product/ar/\", views.ProductArabicListView.as_view(), name=\"product_arabic_list\"),\n]",
        "detail": "products.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "products.urls",
        "description": "products.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"product/en/\", views.ProductEnglishListView.as_view(), name=\"product_english_list\"),\n    path(\"product/ar/\", views.ProductArabicListView.as_view(), name=\"product_arabic_list\"),\n]",
        "detail": "products.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_product",
        "kind": 2,
        "importPath": "products.utils",
        "description": "products.utils",
        "peekOfCode": "def upload_image_product(instance, filename):\n    path = 'uploads/' + 'product/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name",
        "detail": "products.utils",
        "documentation": {}
    },
    {
        "label": "ProductEnglishListView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductEnglishListView(ListAPIView):\n    queryset = ProductEnglish.objects.filter(status=True)\n    serializer_class = ProductEnglishSerializer\nclass ProductArabicListView(ListAPIView):\n    queryset = ProductArabic.objects.filter(status=True)\n    serializer_class = ProductArabicSerializer",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "ProductArabicListView",
        "kind": 6,
        "importPath": "products.views",
        "description": "products.views",
        "peekOfCode": "class ProductArabicListView(ListAPIView):\n    queryset = ProductArabic.objects.filter(status=True)\n    serializer_class = ProductArabicSerializer",
        "detail": "products.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "regulation.migrations.0001_initial",
        "description": "regulation.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Settings',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('phone', models.CharField(max_length=20, verbose_name='Phone')),",
        "detail": "regulation.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "regulation.migrations.0002_alter_social_logo",
        "description": "regulation.migrations.0002_alter_social_logo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('regulation', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='social',\n            name='logo',\n            field=models.ImageField(blank=True, null=True, upload_to=regulation.utils.upload_image_social, verbose_name='Logo'),\n        ),",
        "detail": "regulation.migrations.0002_alter_social_logo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "regulation.migrations.0003_settingsenglish_rename_settings_settingsarabic_and_more",
        "description": "regulation.migrations.0003_settingsenglish_rename_settings_settingsarabic_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('regulation', '0002_alter_social_logo'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='SettingsEnglish',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('phone', models.CharField(max_length=20, verbose_name='Phone')),",
        "detail": "regulation.migrations.0003_settingsenglish_rename_settings_settingsarabic_and_more",
        "documentation": {}
    },
    {
        "label": "RegulationConfig",
        "kind": 6,
        "importPath": "regulation.apps",
        "description": "regulation.apps",
        "peekOfCode": "class RegulationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'regulation'",
        "detail": "regulation.apps",
        "documentation": {}
    },
    {
        "label": "SettingsEnglish",
        "kind": 6,
        "importPath": "regulation.models",
        "description": "regulation.models",
        "peekOfCode": "class SettingsEnglish(models.Model):\n    phone = models.CharField(max_length=20, verbose_name=\"Phone\")\n    email = models.EmailField(verbose_name=\"Email\")\n    address = models.TextField(verbose_name=\"Address\")\n    logo = models.ImageField(\n        upload_to=upload_image_setting, null=True, blank=True, verbose_name='Logo')\n    class Meta:\n        verbose_name = 'Setting English'\n        verbose_name_plural = 'Settings English'\n    def __str__(self):",
        "detail": "regulation.models",
        "documentation": {}
    },
    {
        "label": "SettingsArabic",
        "kind": 6,
        "importPath": "regulation.models",
        "description": "regulation.models",
        "peekOfCode": "class SettingsArabic(models.Model):\n    phone = models.CharField(max_length=20, verbose_name=\"Phone\")\n    email = models.EmailField(verbose_name=\"Email\")\n    address = models.TextField(verbose_name=\"Address\")\n    logo = models.ImageField(\n        upload_to=upload_image_setting, null=True, blank=True, verbose_name='Logo')\n    class Meta:\n        verbose_name = 'Setting Arabic'\n        verbose_name_plural = 'Settings Arabic'\n    def __str__(self):",
        "detail": "regulation.models",
        "documentation": {}
    },
    {
        "label": "Social",
        "kind": 6,
        "importPath": "regulation.models",
        "description": "regulation.models",
        "peekOfCode": "class Social(models.Model):\n    link = models.URLField(verbose_name=\"Link\")\n    logo = models.ImageField(\n        upload_to=upload_image_social, null=True, blank=True, verbose_name='Logo')\n    class Meta:\n        verbose_name = 'Social'\n        verbose_name_plural = 'Social'\n    def __str__(self):\n        return f\"{self.link}\"",
        "detail": "regulation.models",
        "documentation": {}
    },
    {
        "label": "SettingsEnglishSerializer",
        "kind": 6,
        "importPath": "regulation.serializers",
        "description": "regulation.serializers",
        "peekOfCode": "class SettingsEnglishSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SettingsEnglish\n        fields = \"__all__\"\nclass SettingsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SettingsArabic\n        fields = \"__all__\"\nclass SocialSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "regulation.serializers",
        "documentation": {}
    },
    {
        "label": "SettingsArabicSerializer",
        "kind": 6,
        "importPath": "regulation.serializers",
        "description": "regulation.serializers",
        "peekOfCode": "class SettingsArabicSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SettingsArabic\n        fields = \"__all__\"\nclass SocialSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Social\n        fields = \"__all__\"",
        "detail": "regulation.serializers",
        "documentation": {}
    },
    {
        "label": "SocialSerializer",
        "kind": 6,
        "importPath": "regulation.serializers",
        "description": "regulation.serializers",
        "peekOfCode": "class SocialSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Social\n        fields = \"__all__\"",
        "detail": "regulation.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "regulation.urls",
        "description": "regulation.urls",
        "peekOfCode": "app_name = \"settings\"\nurlpatterns = [\n    path(\"settings/en/\", views.SettingsEnglishListView.as_view(), name=\"en_setting_list\"),\n    path(\"settings/ar/\", views.SettingsArabicListView.as_view(), name=\"ar_setting_list\"),\n    path(\"social/\", views.SocialListView.as_view(), name=\"social_list\"),\n]",
        "detail": "regulation.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "regulation.urls",
        "description": "regulation.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"settings/en/\", views.SettingsEnglishListView.as_view(), name=\"en_setting_list\"),\n    path(\"settings/ar/\", views.SettingsArabicListView.as_view(), name=\"ar_setting_list\"),\n    path(\"social/\", views.SocialListView.as_view(), name=\"social_list\"),\n]",
        "detail": "regulation.urls",
        "documentation": {}
    },
    {
        "label": "upload_image_setting",
        "kind": 2,
        "importPath": "regulation.utils",
        "description": "regulation.utils",
        "peekOfCode": "def upload_image_setting(instance, filename):\n    path = 'uploads/' + 'setting/' + \\\n        slugify(instance.title_en, allow_unicode=True)\n    name = str(time.time()) + '-' + str(instance.title_en) + '-' + filename\n    return path + '/' + name\ndef upload_image_social(instance, filename):\n    path = 'uploads/' + 'social/' + \\\n        slugify(\"one\", allow_unicode=True)\n    name = str(time.time()) + '-' + str('one') + '-' + filename\n    return path + '/' + name",
        "detail": "regulation.utils",
        "documentation": {}
    },
    {
        "label": "upload_image_social",
        "kind": 2,
        "importPath": "regulation.utils",
        "description": "regulation.utils",
        "peekOfCode": "def upload_image_social(instance, filename):\n    path = 'uploads/' + 'social/' + \\\n        slugify(\"one\", allow_unicode=True)\n    name = str(time.time()) + '-' + str('one') + '-' + filename\n    return path + '/' + name",
        "detail": "regulation.utils",
        "documentation": {}
    },
    {
        "label": "SettingsEnglishListView",
        "kind": 6,
        "importPath": "regulation.views",
        "description": "regulation.views",
        "peekOfCode": "class SettingsEnglishListView(ListAPIView):\n    queryset = SettingsArabic.objects.all()\n    serializer_class = SettingsEnglishSerializer\nclass SettingsArabicListView(ListAPIView):\n    queryset = SettingsArabic.objects.all()\n    serializer_class = SettingsArabicSerializer\nclass SocialListView(ListAPIView):\n    queryset = Social.objects.all()\n    serializer_class = SocialSerializer",
        "detail": "regulation.views",
        "documentation": {}
    },
    {
        "label": "SettingsArabicListView",
        "kind": 6,
        "importPath": "regulation.views",
        "description": "regulation.views",
        "peekOfCode": "class SettingsArabicListView(ListAPIView):\n    queryset = SettingsArabic.objects.all()\n    serializer_class = SettingsArabicSerializer\nclass SocialListView(ListAPIView):\n    queryset = Social.objects.all()\n    serializer_class = SocialSerializer",
        "detail": "regulation.views",
        "documentation": {}
    },
    {
        "label": "SocialListView",
        "kind": 6,
        "importPath": "regulation.views",
        "description": "regulation.views",
        "peekOfCode": "class SocialListView(ListAPIView):\n    queryset = Social.objects.all()\n    serializer_class = SocialSerializer",
        "detail": "regulation.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]